{
"version":3,
"file":"module$$ianalytics$d4d$components$Plot$plotfuns.js",
"lineCount":95,
"mappings":"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",
"sources":["@ianalytics/d4d/components/Plot/plotfuns.js"],
"sourcesContent":["import React, { useState, useMemo, useEffect } from \"goog:module$node_modules$react$index\";\nimport { useStateValue } from \"/@ianalytics/d4d/components/StateProvider.js\";\nimport { parseISO, isValid, differenceInSeconds } from \"goog:module$node_modules$date_fns$index\";\nexport const traceColors = [\"#78A21A\", \"#eab83a\", \"#25A9DB\", \"#D54073\", \"#5C6CE5\", \"#B76300\", \"#ce5150\", \"#2878c1\", \"#ef843c\"];\nexport const allPlotlyButtons = [\"pan2d\", \"zoom2d\", \"zoomIn2d\", \"zoomOut2d\", \"autoScale2d\", \"resetScale2d\", \"hoverClosestCartesian\", \"hoverCompareCartesian\", \"toggleHover\", \"resetViews\", \"toImage\", \"sendDataToCloud\", \"toggleSpikelines\", \"resetViewMapbox\"]; // this is just the Plotly.icons.pencil but I can't be bothered to fix the imports at this time.\n\nexport const toggleEventCreationIcon = {\n  width: 1792,\n  height: 1792,\n  path: \"M491 1536l91-91-235-235-91 91v107h128v128h107zm523-928q0-22-22-22-10 0-17 7l-542 542q-7 7-7 17 0 22 22 22 10 0 17-7l542-542q7-7 7-17zm-54-192l416 416-832 832h-416v-416zm683 96q0 53-37 90l-166 166-416-416 166-165q36-38 90-38 53 0 91 38l235 234q37 39 37 91z\",\n  transform: \"matrix(1 0 0 1 0 1)\"\n};\nexport function widthOfMeanWindowInSeconds(from, to, nPoints = 512) {\n  let seconds = Math.abs(differenceInSeconds(to, from));\n  return seconds >= nPoints ? Math.floor(seconds / nPoints) : 1;\n}\nexport function makeAnnotations(uids, state) {\n  const eventColors = {\n    warning: \"#f5a030\",\n    high: \"#f7a630\",\n    info: \"#00deee\",\n    failure: \"#ff0000\"\n  };\n  let opacity = 0.25;\n  const related_events = [];\n  let eventAnnotations = [],\n      eventShapes = [];\n  let startWasTruncated = false;\n\n  for (const uid of uids) {\n    for (const e of state.visibleEvents) {\n      if ((e.node && e.node.indexOf(uid) !== -1 || state.pinnedEvents.indexOf(e._id) !== -1) && related_events.indexOf(e) === -1) {\n        related_events.push(e);\n      }\n    }\n  }\n\n  for (const e of related_events) {\n    let eventStart = e.start && parseISO(e.start),\n        eventEnd = e.end && parseISO(e.end),\n        eventColor = eventColors[e.severity],\n        selectedFrom = state.timeSelection.from,\n        selectedTo = state.timeSelection.to;\n\n    if (!isValid(eventEnd)) {\n      eventEnd = selectedTo;\n      opacity = 0.1;\n    }\n\n    if (eventEnd < selectedFrom || selectedTo < eventStart) {\n      continue;\n    }\n\n    if (eventStart < selectedFrom) {\n      eventStart = selectedFrom;\n      startWasTruncated = true;\n    }\n\n    if (selectedTo < eventEnd) {\n      eventEnd = selectedTo;\n    }\n\n    eventAnnotations.push({\n      x: eventStart,\n      y: 1.01 + startWasTruncated * 0.25,\n      xref: \"x\",\n      yref: \"paper\",\n      textangle: startWasTruncated ? 0 : -45,\n      showarrow: !startWasTruncated,\n      text: e.description\n    });\n    eventShapes.push({\n      xref: \"x\",\n      yref: \"paper\",\n      x0: eventStart,\n      x1: eventEnd,\n      y0: 0,\n      y1: 1,\n      type: \"rect\",\n      line: {\n        width: 0\n      },\n      fillcolor: eventColor,\n      opacity: opacity\n    });\n    eventShapes.push({\n      xref: \"x\",\n      yref: \"paper\",\n      x0: eventStart,\n      x1: eventEnd,\n      y0: 1.001,\n      y1: 1.001,\n      type: \"line\",\n      line: {\n        width: 1,\n        color: eventColor\n      }\n    });\n  }\n\n  return [eventAnnotations, eventShapes];\n}\n\nfunction sum(a, b) {\n  return a + b;\n}\n\nfunction mean(values) {\n  return values.reduce(sum) / values.length;\n}\n\nfunction mean_and_sdev(values) {\n  const m = mean(values);\n  const standard_deviation = Math.sqrt(values.map(x => (x - m) ** 2).reduce(sum) / values.length);\n  return [m, standard_deviation];\n}\n\nexport function autorange(plotData, compressAxis = false) {\n  // set the vertical axis to include 2% padding above and\n  // below the supremum and infimum of the data shown.\n  //\n  // when compressAxis is true, show at most 3 standard\n  // deviations above and below the mean, so outliers don't\n  // throw the whole plot off.\n  if (!plotData) return [];\n  let range = [Infinity, -Infinity];\n\n  for (datum in plotData) {\n    if (plotData[datum] && plotData[datum].hasOwnProperty(\"y\") && plotData[datum].y !== undefined && Array.isArray(plotData[datum].y)) {\n      const values = plotData[datum].y.filter(v => v !== null && !isNaN(v));\n      const [m, s] = mean_and_sdev(values);\n\n      if (compressAxis) {\n        range = [Math.min(range[0], Math.max(Math.min(...values) * 0.98, Math.min(m - Math.abs(3 * s), 0.98 * m))), Math.max(range[1], Math.min(Math.max(...values) * 1.02, Math.max(m + Math.abs(3 * s), 1.02 * m)))];\n      } else {\n        range = [Math.min(range[0], Math.min(...values) * 0.98), Math.max(range[1], Math.max(...values) * 1.02)];\n      }\n    }\n  }\n\n  return range;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"],
"names":["traceColors","allPlotlyButtons","toggleEventCreationIcon","width","height","path","transform","widthOfMeanWindowInSeconds","from","to","nPoints","seconds","Math","abs","differenceInSeconds","floor","makeAnnotations","uids","state","eventColors","warning","high","info","failure","opacity","related_events","eventAnnotations","eventShapes","startWasTruncated","uid","e","visibleEvents","node","indexOf","pinnedEvents","_id","push","eventStart","start","parseISO","eventEnd","end","eventColor","severity","selectedFrom","timeSelection","selectedTo","isValid","x","y","xref","yref","textangle","showarrow","text","description","x0","x1","y0","y1","type","line","fillcolor","color","sum","a","b","mean","values","reduce","length","mean_and_sdev","m","standard_deviation","sqrt","map","autorange","plotData","compressAxis","range","Infinity","datum","hasOwnProperty","undefined","Array","isArray","filter","v","isNaN","s","min","max","$jscomp$tmp$exports$module$name"]
}

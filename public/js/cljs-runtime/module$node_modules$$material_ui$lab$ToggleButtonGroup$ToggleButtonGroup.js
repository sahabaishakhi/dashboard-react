shadow$provide.module$node_modules$$material_ui$lab$ToggleButtonGroup$ToggleButtonGroup=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=exports.styles=void 0;var _extends2=module(require("module$node_modules$$babel$runtime$helpers$extends")),_objectWithoutProperties2=module(require("module$node_modules$$babel$runtime$helpers$objectWithoutProperties")),
React=global(require("module$node_modules$react$index")),_reactIs=require("module$node_modules$react_is$index");global=module(require("module$node_modules$prop_types$index"));var _clsx=module(require("module$node_modules$clsx$dist$clsx")),_isValueSelected=module(require("module$node_modules$$material_ui$lab$ToggleButtonGroup$isValueSelected"));module=require("module$node_modules$$material_ui$core$esm$styles$index");var _utils=require("module$node_modules$$material_ui$core$esm$utils$index");require=
function(theme){return{root:{display:"inline-flex",borderRadius:theme.shape.borderRadius},vertical:{flexDirection:"column"},grouped:{},groupedHorizontal:{"\x26:not(:first-child)":{marginLeft:-1,borderLeft:"1px solid transparent",borderTopLeftRadius:0,borderBottomLeftRadius:0},"\x26:not(:last-child)":{borderTopRightRadius:0,borderBottomRightRadius:0}},groupedVertical:{"\x26:not(:first-child)":{marginTop:-1,borderTop:"1px solid transparent",borderTopLeftRadius:0,borderTopRightRadius:0},"\x26:not(:last-child)":{borderBottomLeftRadius:0,
borderBottomRightRadius:0}}}};exports.styles=require;var ToggleButtonGroup=React.forwardRef(function(props,ref){var children=props.children,classes=props.classes,className=props.className,_props$exclusive=props.exclusive,exclusive=void 0===_props$exclusive?!1:_props$exclusive,onChange=props.onChange;_props$exclusive=props.orientation;var orientation=void 0===_props$exclusive?"horizontal":_props$exclusive;_props$exclusive=props.size;var size=void 0===_props$exclusive?"medium":_props$exclusive,value=
props.value;props=(0,_objectWithoutProperties2.default)(props,"children classes className exclusive onChange orientation size value".split(" "));var handleChange=function(event,buttonValue){if(onChange){var index=value&&value.indexOf(buttonValue);value&&0<=index?(buttonValue=value.slice(),buttonValue.splice(index,1)):buttonValue=value?value.concat(buttonValue):[buttonValue];onChange(event,buttonValue)}},handleExclusiveChange=function(event,buttonValue){onChange&&onChange(event,value===buttonValue?
null:buttonValue)};return React.createElement("div",(0,_extends2.default)({role:"group",className:(0,_clsx.default)(classes.root,className,"vertical"===orientation&&classes.vertical),ref},props),React.Children.map(children,function(child){if(!React.isValidElement(child))return null;(0,_reactIs.isFragment)(child)&&console.error("Material-UI: The ToggleButtonGroup component doesn't accept a Fragment as a child.\nConsider providing an array instead.");return React.cloneElement(child,{className:(0,_clsx.default)(classes.grouped,
classes["grouped".concat((0,_utils.capitalize)(orientation))],child.props.className),onChange:exclusive?handleExclusiveChange:handleChange,selected:void 0===child.props.selected?(0,_isValueSelected.default)(child.props.value,value):child.props.selected,size:child.props.size||size})}))});ToggleButtonGroup.propTypes={children:global.default.node,classes:global.default.object,className:global.default.string,exclusive:global.default.bool,onChange:global.default.func,orientation:global.default.oneOf(["horizontal",
"vertical"]),size:global.default.oneOf(["large","medium","small"]),value:global.default.any};require=(0,module.withStyles)(require,{name:"MuiToggleButtonGroup"})(ToggleButtonGroup);exports.default=require}
//# sourceMappingURL=module$node_modules$$material_ui$lab$ToggleButtonGroup$ToggleButtonGroup.js.map

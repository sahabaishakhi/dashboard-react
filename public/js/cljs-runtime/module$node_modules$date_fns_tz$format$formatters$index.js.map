{
"version":3,
"file":"module$node_modules$date_fns_tz$format$formatters$index.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/date-fns-tz/format/formatters/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$date_fns_tz$format$formatters$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _tzIntlTimeZoneName = _interopRequireDefault(require(\"../../_lib/tzIntlTimeZoneName\"));\n\nvar _tzParseTimezone = _interopRequireDefault(require(\"../../_lib/tzParseTimezone\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MILLISECONDS_IN_MINUTE = 60 * 1000;\nvar formatters = {\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = options.timeZone ? (0, _tzParseTimezone.default)(options.timeZone, originalDate) / MILLISECONDS_IN_MINUTE : originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimeter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimeter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimeter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimeter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = options.timeZone ? (0, _tzParseTimezone.default)(options.timeZone, originalDate) / MILLISECONDS_IN_MINUTE : originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimeter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimeter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimeter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimeter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = options.timeZone ? (0, _tzParseTimezone.default)(options.timeZone, originalDate) / MILLISECONDS_IN_MINUTE : originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, localize, options) {\n    var originalDate = options._originalDate || date;\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return (0, _tzIntlTimeZoneName.default)('short', originalDate, options);\n      // Long\n\n      case 'zzzz':\n      default:\n        return (0, _tzIntlTimeZoneName.default)('long', originalDate, options);\n    }\n  }\n};\n\nfunction addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}\n\nfunction formatTimezone(offset, dirtyDelimeter) {\n  var delimeter = dirtyDelimeter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimeter + minutes;\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimeter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimeter);\n}\n\nfunction formatTimezoneShort(offset, dirtyDelimeter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimeter = dirtyDelimeter || '';\n  return sign + String(hours) + delimeter + addLeadingZeros(minutes, 2);\n}\n\nvar _default = formatters;\nexports.default = _default;\nmodule.exports = exports.default;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","addLeadingZeros","number","targetLength","output","Math","abs","toString","length","sign","formatTimezone","offset","dirtyDelimeter","delimeter","absOffset","hours","floor","minutes","formatTimezoneWithOptionalMinutes","Object","defineProperty","value","_tzIntlTimeZoneName","_tzParseTimezone","formatters","X","date","token","localize","options","originalDate","_originalDate","timezoneOffset","timeZone","MILLISECONDS_IN_MINUTE","getTimezoneOffset","x","O","String","z"]
}

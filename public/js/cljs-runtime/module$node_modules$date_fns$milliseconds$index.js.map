{
"version":3,
"file":"module$node_modules$date_fns$milliseconds$index.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,+CAAA,CAAoE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG5GC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,OAAR,CAuCAC,QAAqB,CAACC,IAAD,CAAO,CAAA,IACtBC,MAAQD,IAAKC,CAAAA,KADS,CAEtBC,OAASF,IAAKE,CAAAA,MAFQ,CAGtBC,MAAQH,IAAKG,CAAAA,KAHS,CAItBC,KAAOJ,IAAKI,CAAAA,IAJU,CAKtBC,MAAQL,IAAKK,CAAAA,KALS,CAMtBC,QAAUN,IAAKM,CAAAA,OANO,CAOtBC,QAAUP,IAAKO,CAAAA,OACnB,IAAIC,MAAOV,CAAAA,OAAX,EAAoB,CAApB,CAAuBW,SAAvB,CACA,KAAIC,UAAY,CACZT,MAAJ,GAAWS,SAAX,EAAwBT,KAAxB,CAAgCU,UAAhC,CACIT,OAAJ,GAAYQ,SAAZ,EAAmCC,UAAnC,CAAgD,EAAhD,CAAyBT,MAAzB,CACIC,MAAJ,GAAWO,SAAX,EAAgC,CAAhC,CAAwBP,KAAxB,CACIC,KAAJ,GAAUM,SAAV,EAAuBN,IAAvB,CACIQ,MAAAA;AAAqC,KAArCA,CAAeF,SACfL,MAAJ,GAAWO,KAAX,EAAwC,IAAxC,CAA2BP,KAA3B,CACIC,QAAJ,GAAaM,KAAb,EAAuC,EAAvC,CAA6BN,OAA7B,CACIC,QAAJ,GAAaK,KAAb,EAA6BL,OAA7B,CACA,OAAOM,KAAKC,CAAAA,KAAL,CAA0B,GAA1B,CAAWF,KAAX,CAlBmB,CArC5B,KAAIJ,OAEJO,QAA+B,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAElB,QAASkB,GAAX,CAAvC,CAFxB,CAAuBxB,OAAA,CAAQ,sDAAR,CAAvB,CAAb,CAMImB,WAAa,QAoDjBlB,OAAOC,CAAAA,OAAP,CAAiBA,OAAQI,CAAAA,OAlEmF;",
"sources":["node_modules/date-fns/milliseconds/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$date_fns$milliseconds$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = milliseconds;\n\nvar _index = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n// 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\nvar daysInYear = 365.2425;\n/**\n * @name milliseconds\n * @category Millisecond Helpers\n * @summary\n * Returns the number of milliseconds in the specified, years, months, weeks, days, hours, minutes and seconds.\n *\n * @description\n * Returns the number of milliseconds in the specified, years, months, weeks, days, hours, minutes and seconds.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n *\n * One month is a year divided by 12.\n *\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {number} the milliseconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // 1 year in milliseconds\n * milliseconds({ years: 1 })\n * //=> 31556952000\n *\n * // 3 months in milliseconds\n * milliseconds({ months: 3 })\n * //=> 7889238000\n */\n\nfunction milliseconds(_ref) {\n  var years = _ref.years,\n      months = _ref.months,\n      weeks = _ref.weeks,\n      days = _ref.days,\n      hours = _ref.hours,\n      minutes = _ref.minutes,\n      seconds = _ref.seconds;\n  (0, _index.default)(1, arguments);\n  var totalDays = 0;\n  if (years) totalDays += years * daysInYear;\n  if (months) totalDays += months * (daysInYear / 12);\n  if (weeks) totalDays += weeks * 7;\n  if (days) totalDays += days;\n  var totalSeconds = totalDays * 24 * 60 * 60;\n  if (hours) totalSeconds += hours * 60 * 60;\n  if (minutes) totalSeconds += minutes * 60;\n  if (seconds) totalSeconds += seconds;\n  return Math.round(totalSeconds * 1000);\n}\n\nmodule.exports = exports.default;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","default","milliseconds","_ref","years","months","weeks","days","hours","minutes","seconds","_index","arguments","totalDays","daysInYear","totalSeconds","Math","round","_interopRequireDefault","obj","__esModule"]
}

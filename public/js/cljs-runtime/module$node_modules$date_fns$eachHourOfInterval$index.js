shadow$provide.module$node_modules$date_fns$eachHourOfInterval$index=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(exports,"__esModule",{value:!0});exports.default=function(dirtyInterval,options){(0,_index3.default)(1,arguments);var interval=dirtyInterval||{},startDate=(0,_index2.default)(interval.start);interval=(0,_index2.default)(interval.end);var startTime=startDate.getTime();interval=interval.getTime();
if(!(startTime<=interval))throw new RangeError("Invalid interval");startTime=[];startDate.setMinutes(0,0,0);var step=options&&"step"in options?Number(options.step):1;if(1>step||isNaN(step))throw new RangeError("`options.step` must be a number greater than 1");for(;startDate.getTime()<=interval;)startTime.push((0,_index2.default)(startDate)),startDate=(0,_index.default)(startDate,step);return startTime};var _index=_interopRequireDefault(require("module$node_modules$date_fns$addHours$index")),_index2=
_interopRequireDefault(require("module$node_modules$date_fns$toDate$index")),_index3=_interopRequireDefault(require("module$node_modules$date_fns$_lib$requiredArgs$index"));module.exports=exports.default}
//# sourceMappingURL=module$node_modules$date_fns$eachHourOfInterval$index.js.map

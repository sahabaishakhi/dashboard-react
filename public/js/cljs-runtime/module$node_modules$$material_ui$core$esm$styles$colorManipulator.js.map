{
"version":3,
"file":"module$node_modules$$material_ui$core$esm$styles$colorManipulator.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/@material-ui/core/esm/styles/colorManipulator.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$material_ui$core$esm$styles$colorManipulator\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hexToRgb = hexToRgb;\nexports.rgbToHex = rgbToHex;\nexports.hslToRgb = hslToRgb;\nexports.decomposeColor = decomposeColor;\nexports.recomposeColor = recomposeColor;\nexports.getContrastRatio = getContrastRatio;\nexports.getLuminance = getLuminance;\nexports.emphasize = emphasize;\nexports.fade = fade;\nexports.alpha = alpha;\nexports.darken = darken;\nexports.lighten = lighten;\n\nvar _utils = require(\"@material-ui/utils\");\n\n/* eslint-disable no-use-before-define */\n\n/**\n * Returns a number whose value is limited to the given range.\n *\n * @param {number} value The value to be clamped\n * @param {number} min The lower boundary of the output range\n * @param {number} max The upper boundary of the output range\n * @returns {number} A number in the range [min, max]\n */\nfunction clamp(value) {\n  var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value < min || value > max) {\n      console.error(\"Material-UI: The value provided \".concat(value, \" is out of range [\").concat(min, \", \").concat(max, \"].\"));\n    }\n  }\n\n  return Math.min(Math.max(min, value), max);\n}\n/**\n * Converts a color from CSS hex format to CSS rgb format.\n *\n * @param {string} color - Hex color, i.e. #nnn or #nnnnnn\n * @returns {string} A CSS rgb color string\n */\n\n\nfunction hexToRgb(color) {\n  color = color.substr(1);\n  var re = new RegExp(\".{1,\".concat(color.length >= 6 ? 2 : 1, \"}\"), 'g');\n  var colors = color.match(re);\n\n  if (colors && colors[0].length === 1) {\n    colors = colors.map(function (n) {\n      return n + n;\n    });\n  }\n\n  return colors ? \"rgb\".concat(colors.length === 4 ? 'a' : '', \"(\").concat(colors.map(function (n, index) {\n    return index < 3 ? parseInt(n, 16) : Math.round(parseInt(n, 16) / 255 * 1000) / 1000;\n  }).join(', '), \")\") : '';\n}\n\nfunction intToHex(int) {\n  var hex = int.toString(16);\n  return hex.length === 1 ? \"0\".concat(hex) : hex;\n}\n/**\n * Converts a color from CSS rgb format to CSS hex format.\n *\n * @param {string} color - RGB color, i.e. rgb(n, n, n)\n * @returns {string} A CSS rgb color string, i.e. #nnnnnn\n */\n\n\nfunction rgbToHex(color) {\n  // Idempotent\n  if (color.indexOf('#') === 0) {\n    return color;\n  }\n\n  var _decomposeColor = decomposeColor(color),\n      values = _decomposeColor.values;\n\n  return \"#\".concat(values.map(function (n) {\n    return intToHex(n);\n  }).join(''));\n}\n/**\n * Converts a color from hsl format to rgb format.\n *\n * @param {string} color - HSL color values\n * @returns {string} rgb color values\n */\n\n\nfunction hslToRgb(color) {\n  color = decomposeColor(color);\n  var _color = color,\n      values = _color.values;\n  var h = values[0];\n  var s = values[1] / 100;\n  var l = values[2] / 100;\n  var a = s * Math.min(l, 1 - l);\n\n  var f = function f(n) {\n    var k = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (n + h / 30) % 12;\n    return l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  };\n\n  var type = 'rgb';\n  var rgb = [Math.round(f(0) * 255), Math.round(f(8) * 255), Math.round(f(4) * 255)];\n\n  if (color.type === 'hsla') {\n    type += 'a';\n    rgb.push(values[3]);\n  }\n\n  return recomposeColor({\n    type: type,\n    values: rgb\n  });\n}\n/**\n * Returns an object with the type and values of a color.\n *\n * Note: Does not support rgb % values.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {object} - A MUI color object: {type: string, values: number[]}\n */\n\n\nfunction decomposeColor(color) {\n  // Idempotent\n  if (color.type) {\n    return color;\n  }\n\n  if (color.charAt(0) === '#') {\n    return decomposeColor(hexToRgb(color));\n  }\n\n  var marker = color.indexOf('(');\n  var type = color.substring(0, marker);\n\n  if (['rgb', 'rgba', 'hsl', 'hsla'].indexOf(type) === -1) {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? \"Material-UI: Unsupported `\".concat(color, \"` color.\\nWe support the following formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla().\") : (0, _utils.formatMuiErrorMessage)(3, color));\n  }\n\n  var values = color.substring(marker + 1, color.length - 1).split(',');\n  values = values.map(function (value) {\n    return parseFloat(value);\n  });\n  return {\n    type: type,\n    values: values\n  };\n}\n/**\n * Converts a color object with type and values to a string.\n *\n * @param {object} color - Decomposed color\n * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla'\n * @param {array} color.values - [n,n,n] or [n,n,n,n]\n * @returns {string} A CSS color string\n */\n\n\nfunction recomposeColor(color) {\n  var type = color.type;\n  var values = color.values;\n\n  if (type.indexOf('rgb') !== -1) {\n    // Only convert the first 3 values to int (i.e. not alpha)\n    values = values.map(function (n, i) {\n      return i < 3 ? parseInt(n, 10) : n;\n    });\n  } else if (type.indexOf('hsl') !== -1) {\n    values[1] = \"\".concat(values[1], \"%\");\n    values[2] = \"\".concat(values[2], \"%\");\n  }\n\n  return \"\".concat(type, \"(\").concat(values.join(', '), \")\");\n}\n/**\n * Calculates the contrast ratio between two colors.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n *\n * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {number} A contrast ratio value in the range 0 - 21.\n */\n\n\nfunction getContrastRatio(foreground, background) {\n  var lumA = getLuminance(foreground);\n  var lumB = getLuminance(background);\n  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);\n}\n/**\n * The relative brightness of any point in a color space,\n * normalized to 0 for darkest black and 1 for lightest white.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {number} The relative brightness of the color in the range 0 - 1\n */\n\n\nfunction getLuminance(color) {\n  color = decomposeColor(color);\n  var rgb = color.type === 'hsl' ? decomposeColor(hslToRgb(color)).values : color.values;\n  rgb = rgb.map(function (val) {\n    val /= 255; // normalized\n\n    return val <= 0.03928 ? val / 12.92 : Math.pow((val + 0.055) / 1.055, 2.4);\n  }); // Truncate at 3 digits\n\n  return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));\n}\n/**\n * Darken or lighten a color, depending on its luminance.\n * Light colors are darkened, dark colors are lightened.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {number} coefficient=0.15 - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\n\n\nfunction emphasize(color) {\n  var coefficient = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.15;\n  return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);\n}\n\nvar warnedOnce = false;\n/**\n * Set the absolute transparency of a color.\n * Any existing alpha values are overwritten.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {number} value - value to set the alpha channel to in the range 0 -1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n *\n * @deprecated\n * Use `import { alpha } from '@material-ui/core/styles'` instead.\n */\n\nfunction fade(color, value) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnce) {\n      warnedOnce = true;\n      console.error(['Material-UI: The `fade` color utility was renamed to `alpha` to better describe its functionality.', '', \"You should use `import { alpha } from '@material-ui/core/styles'`\"].join('\\n'));\n    }\n  }\n\n  return alpha(color, value);\n}\n/**\n * Set the absolute transparency of a color.\n * Any existing alpha value is overwritten.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {number} value - value to set the alpha channel to in the range 0-1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\n\n\nfunction alpha(color, value) {\n  color = decomposeColor(color);\n  value = clamp(value);\n\n  if (color.type === 'rgb' || color.type === 'hsl') {\n    color.type += 'a';\n  }\n\n  color.values[3] = value;\n  return recomposeColor(color);\n}\n/**\n * Darkens a color.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\n\n\nfunction darken(color, coefficient) {\n  color = decomposeColor(color);\n  coefficient = clamp(coefficient);\n\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] *= 1 - coefficient;\n  } else if (color.type.indexOf('rgb') !== -1) {\n    for (var i = 0; i < 3; i += 1) {\n      color.values[i] *= 1 - coefficient;\n    }\n  }\n\n  return recomposeColor(color);\n}\n/**\n * Lightens a color.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\n\n\nfunction lighten(color, coefficient) {\n  color = decomposeColor(color);\n  coefficient = clamp(coefficient);\n\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] += (100 - color.values[2]) * coefficient;\n  } else if (color.type.indexOf('rgb') !== -1) {\n    for (var i = 0; i < 3; i += 1) {\n      color.values[i] += (255 - color.values[i]) * coefficient;\n    }\n  }\n\n  return recomposeColor(color);\n}\n};"],
"names":["shadow$provide","global","require","module","exports","clamp","value","min","arguments","length","undefined","max","console","error","concat","Math","hexToRgb","color","substr","re","RegExp","colors","match","map","n","index","parseInt","round","join","hslToRgb","decomposeColor","values","h","l","a","f","k","type","rgb","push","recomposeColor","charAt","marker","indexOf","substring","Error","split","parseFloat","i","getLuminance","val","pow","Number","toFixed","alpha","darken","coefficient","lighten","Object","defineProperty","rgbToHex","_decomposeColor","hex","toString","getContrastRatio","foreground","background","lumA","lumB","emphasize","fade","warnedOnce"]
}

{
"version":3,
"file":"module$node_modules$date_fns$eachMinuteOfInterval$index.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,uDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAgBpHC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEE,QAASF,GAAX,CAAvC,CAbrCG,MAAOC,CAAAA,cAAP,CAAsBN,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CO,MAAO,CAAA,CADoC,CAA7C,CAGAP,QAAQI,CAAAA,OAAR,CA0CAI,QAA6B,CAACC,QAAD,CAAWC,OAAX,CAAoB,CAC/C,GAAIC,OAAQP,CAAAA,OAAZ,EAAqB,CAArB,CAAwBQ,SAAxB,CACA,KAAIC,UAAY,GAAIC,OAAQV,CAAAA,OAAZ,EAAqB,GAAIW,OAAQX,CAAAA,OAAZ,EAAqBK,QAASO,CAAAA,KAA9B,CAArB,CAAhB,CACIC,QAAU,GAAIH,OAAQV,CAAAA,OAAZ,EAAqB,GAAIW,OAAQX,CAAAA,OAAZ,EAAqBK,QAASS,CAAAA,GAA9B,CAArB,CADd,CAEIC,UAAYN,SAAUO,CAAAA,OAAV,EACZC,QAAAA,CAAUJ,OAAQG,CAAAA,OAAR,EAEd;GAAID,SAAJ,EAAiBE,OAAjB,CACE,KAAM,KAAIC,UAAJ,CAAe,kBAAf,CAAN,CAGEC,SAAAA,CAAQ,EAEZ,KAAIC,KAAOd,OAAA,EAAW,MAAX,EAAqBA,QAArB,CAA+Be,MAAA,CAAOf,OAAQc,CAAAA,IAAf,CAA/B,CAAsD,CACjE,IAAW,CAAX,CAAIA,IAAJ,EAAgBE,KAAA,CAAMF,IAAN,CAAhB,CAA6B,KAAM,KAAIF,UAAJ,CAAe,yDAAf,CAAN,CAE7B,IAAA,CAAOK,SAAYP,CAAAA,OAAZ,EAAP,EAAgCC,OAAhC,CAAA,CACEE,SAAMK,CAAAA,IAAN,CAAW,GAAIb,OAAQX,CAAAA,OAAZ,EAAqBuB,SAArB,CAAX,CACA,CAAAA,SAAA,CAAc,GAAIE,MAAOzB,CAAAA,OAAX,EAAoBuB,SAApB,CAAiCH,IAAjC,CAGhB,OAAOD,UArBwC,CAxCjD,KAAIM,OAAS5B,sBAAA,CAAuBH,OAAA,CAAQ,+CAAR,CAAvB,CAAb,CAEIiB,QAAUd,sBAAA,CAAuBH,OAAA,CAAQ,2CAAR,CAAvB,CAFd;AAIIgB,QAAUb,sBAAA,CAAuBH,OAAA,CAAQ,kDAAR,CAAvB,CAJd,CAMIa,QAAUV,sBAAA,CAAuBH,OAAA,CAAQ,sDAAR,CAAvB,CA0DdC,OAAOC,CAAAA,OAAP,CAAiBA,OAAQI,CAAAA,OAxE2F;",
"sources":["node_modules/date-fns/eachMinuteOfInterval/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$date_fns$eachMinuteOfInterval$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = eachMinuteOfInterval;\n\nvar _index = _interopRequireDefault(require(\"../addMinutes/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../startOfMinute/index.js\"));\n\nvar _index4 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name eachMinuteOfInterval\n * @category Interval Helpers\n * @summary Return the array of minutes within the specified time interval.\n *\n * @description\n * Returns the array of minutes within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The starts of minutes from the hour of the interval start to the hour of the interval end\n * @throws {TypeError} 1 argument requie value should be more than 1.\n * @returns {Date[]} the array withred\n * @throws {RangeError} `options.step` must be a number equal or greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each minute between 14 October 2020, 13:00 and 14 October 2020, 13:03\n * const result = eachMinuteOfInterval({\n *   start: new Date(2014, 9, 14, 13),\n *   end: new Date(2014, 9, 14, 13, 3)\n * })\n * //=> [\n * //   Wed Oct 14 2014 13:00:00,\n * //   Wed Oct 14 2014 13:01:00,\n * //   Wed Oct 14 2014 13:02:00,\n * //   Wed Oct 14 2014 13:03:00\n * // ]\n */\nfunction eachMinuteOfInterval(interval, options) {\n  (0, _index4.default)(1, arguments);\n  var startDate = (0, _index3.default)((0, _index2.default)(interval.start));\n  var endDate = (0, _index3.default)((0, _index2.default)(interval.end));\n  var startTime = startDate.getTime();\n  var endTime = endDate.getTime();\n\n  if (startTime >= endTime) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  var step = options && 'step' in options ? Number(options.step) : 1;\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number equal or greater than 1');\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push((0, _index2.default)(currentDate));\n    currentDate = (0, _index.default)(currentDate, step);\n  }\n\n  return dates;\n}\n\nmodule.exports = exports.default;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","eachMinuteOfInterval","interval","options","_index4","arguments","startDate","_index3","_index2","start","endDate","end","startTime","getTime","endTime","RangeError","dates","step","Number","isNaN","currentDate","push","_index"]
}

{
"version":3,
"file":"module$node_modules$date_fns$eachWeekOfInterval$index.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,qDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAgBlHC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEE,QAASF,GAAX,CAAvC,CAbrCG,MAAOC,CAAAA,cAAP,CAAsBN,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CO,MAAO,CAAA,CADoC,CAA7C,CAGAP,QAAQI,CAAAA,OAAR,CAmDAI,QAA2B,CAACC,aAAD,CAAgBC,OAAhB,CAAyB,CAClD,GAAIC,OAAQP,CAAAA,OAAZ,EAAqB,CAArB,CAAwBQ,SAAxB,CACA,KAAIC,SAAWJ,aAAXI,EAA4B,EAAhC,CACIC,UAAY,GAAIC,OAAQX,CAAAA,OAAZ,EAAqBS,QAASG,CAAAA,KAA9B,CADhB,CAEIC,QAAU,GAAIF,OAAQX,CAAAA,OAAZ,EAAqBS,QAASK,CAAAA,GAA9B,CACVC,SAAAA,CAAUF,OAAQG,CAAAA,OAAR,EAEd,IAAI,EAAEN,SAAUM,CAAAA,OAAV,EAAF,EAAyBD,QAAzB,CAAJ,CACE,KAAM,KAAIE,UAAJ,CAAe,kBAAf,CAAN;AAGEC,SAAAA,CAAgB,GAAIC,OAAQnB,CAAAA,OAAZ,EAAqBU,SAArB,CAAgCJ,OAAhC,CAChBc,SAAAA,CAAc,GAAID,OAAQnB,CAAAA,OAAZ,EAAqBa,OAArB,CAA8BP,OAA9B,CAElBY,UAAcG,CAAAA,QAAd,CAAuB,EAAvB,CACAD,SAAYC,CAAAA,QAAZ,CAAqB,EAArB,CACAN,SAAA,CAAUK,QAAYJ,CAAAA,OAAZ,EAIV,KAHIM,OAGJ,CAHY,EAGZ,CAAOC,SAAYP,CAAAA,OAAZ,EAAP,EAAgCD,QAAhC,CAAA,CACEQ,SAAYF,CAAAA,QAAZ,CAAqB,CAArB,CAGA,CAFAC,OAAME,CAAAA,IAAN,CAAW,GAAIb,OAAQX,CAAAA,OAAZ,EAAqBuB,SAArB,CAAX,CAEA,CADAA,SACA,CADc,GAAIE,MAAOzB,CAAAA,OAAX,EAAoBuB,SAApB,CAAiC,CAAjC,CACd,CAAAA,SAAYF,CAAAA,QAAZ,CAAqB,EAArB,CAGF,OAAOC,QA3B2C,CAjDpD,KAAIG,OAAS5B,sBAAA,CAAuBH,OAAA,CAAQ,6CAAR,CAAvB,CAAb,CAEIyB,QAAUtB,sBAAA,CAAuBH,OAAA,CAAQ,gDAAR,CAAvB,CAFd;AAIIiB,QAAUd,sBAAA,CAAuBH,OAAA,CAAQ,2CAAR,CAAvB,CAJd,CAMIa,QAAUV,sBAAA,CAAuBH,OAAA,CAAQ,sDAAR,CAAvB,CAyEdC,OAAOC,CAAAA,OAAP,CAAiBA,OAAQI,CAAAA,OAvFyF;",
"sources":["node_modules/date-fns/eachWeekOfInterval/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$date_fns$eachWeekOfInterval$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = eachWeekOfInterval;\n\nvar _index = _interopRequireDefault(require(\"../addWeeks/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../startOfWeek/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index4 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name eachWeekOfInterval\n * @category Interval Helpers\n * @summary Return the array of weeks within the specified time interval.\n *\n * @description\n * Return the array of weeks within the specified time interval.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date[]} the array with starts of weeks from the week of the interval start to the week of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be 0, 1, ..., 6\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each week within interval 6 October 2014 - 23 November 2014:\n * var result = eachWeekOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 10, 23)\n * })\n * //=> [\n * //   Sun Oct 05 2014 00:00:00,\n * //   Sun Oct 12 2014 00:00:00,\n * //   Sun Oct 19 2014 00:00:00,\n * //   Sun Oct 26 2014 00:00:00,\n * //   Sun Nov 02 2014 00:00:00,\n * //   Sun Nov 09 2014 00:00:00,\n * //   Sun Nov 16 2014 00:00:00,\n * //   Sun Nov 23 2014 00:00:00\n * // ]\n */\nfunction eachWeekOfInterval(dirtyInterval, options) {\n  (0, _index4.default)(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = (0, _index3.default)(interval.start);\n  var endDate = (0, _index3.default)(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var startDateWeek = (0, _index2.default)(startDate, options);\n  var endDateWeek = (0, _index2.default)(endDate, options); // Some timezones switch DST at midnight, making start of day unreliable in these timezones, 3pm is a safe bet\n\n  startDateWeek.setHours(15);\n  endDateWeek.setHours(15);\n  endTime = endDateWeek.getTime();\n  var weeks = [];\n  var currentWeek = startDateWeek;\n\n  while (currentWeek.getTime() <= endTime) {\n    currentWeek.setHours(0);\n    weeks.push((0, _index3.default)(currentWeek));\n    currentWeek = (0, _index.default)(currentWeek, 1);\n    currentWeek.setHours(15);\n  }\n\n  return weeks;\n}\n\nmodule.exports = exports.default;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","eachWeekOfInterval","dirtyInterval","options","_index4","arguments","interval","startDate","_index3","start","endDate","end","endTime","getTime","RangeError","startDateWeek","_index2","endDateWeek","setHours","weeks","currentWeek","push","_index"]
}

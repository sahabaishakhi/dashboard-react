{
"version":3,
"file":"module$node_modules$date_fns$set$index.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,sCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAgBnGC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEE,QAASF,GAAX,CAAvC,CAbrCG,MAAOC,CAAAA,cAAP,CAAsBN,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CO,MAAO,CAAA,CADoC,CAA7C,CAGAP,QAAQI,CAAAA,OAAR,CAkDAI,QAAY,CAACC,SAAD,CAAYC,MAAZ,CAAoB,CAC9B,GAAIC,OAAQP,CAAAA,OAAZ,EAAqB,CAArB,CAAwBQ,SAAxB,CAEA,IAAsB,QAAtB,GAAI,MAAOF,OAAX,EAA6C,IAA7C,GAAkCA,MAAlC,CACE,KAAM,KAAIG,UAAJ,CAAe,oCAAf,CAAN,CAGF,IAAIC,KAAO,GAAIC,MAAOX,CAAAA,OAAX,EAAoBK,SAApB,CAEX,IAAIO,KAAA,CAAMF,IAAKG,CAAAA,OAAL,EAAN,CAAJ,CACE,MAAO,KAAIC,IAAJ,CAASC,GAAT,CAGU,KAAnB,EAAIT,MAAOU,CAAAA,IAAX;AACEN,IAAKO,CAAAA,WAAL,CAAiBX,MAAOU,CAAAA,IAAxB,CAGkB,KAApB,EAAIV,MAAOY,CAAAA,KAAX,GACER,IADF,CACS,GAAIS,OAAQnB,CAAAA,OAAZ,EAAqBU,IAArB,CAA2BJ,MAAOY,CAAAA,KAAlC,CADT,CAImB,KAAnB,EAAIZ,MAAOI,CAAAA,IAAX,EACEA,IAAKU,CAAAA,OAAL,CAAa,GAAIC,OAAQrB,CAAAA,OAAZ,EAAqBM,MAAOI,CAAAA,IAA5B,CAAb,CAGkB,KAApB,EAAIJ,MAAOgB,CAAAA,KAAX,EACEZ,IAAKa,CAAAA,QAAL,CAAc,GAAIF,OAAQrB,CAAAA,OAAZ,EAAqBM,MAAOgB,CAAAA,KAA5B,CAAd,CAGoB,KAAtB,EAAIhB,MAAOkB,CAAAA,OAAX,EACEd,IAAKe,CAAAA,UAAL,CAAgB,GAAIJ,OAAQrB,CAAAA,OAAZ,EAAqBM,MAAOkB,CAAAA,OAA5B,CAAhB,CAGoB,KAAtB,EAAIlB,MAAOoB,CAAAA,OAAX,EACEhB,IAAKiB,CAAAA,UAAL,CAAgB,GAAIN,OAAQrB,CAAAA,OAAZ,EAAqBM,MAAOoB,CAAAA,OAA5B,CAAhB,CAGyB,KAA3B,EAAIpB,MAAOsB,CAAAA,YAAX,EACElB,IAAKmB,CAAAA,eAAL,CAAqB,GAAIR,OAAQrB,CAAAA,OAAZ,EAAqBM,MAAOsB,CAAAA,YAA5B,CAArB,CAGF,OAAOlB,KAzCuB,CAhDhC,KAAIC,OAASd,sBAAA,CAAuBH,OAAA,CAAQ,2CAAR,CAAvB,CAAb;AAEIyB,QAAUtB,sBAAA,CAAuBH,OAAA,CAAQ,6CAAR,CAAvB,CAFd,CAII2B,QAAUxB,sBAAA,CAAuBH,OAAA,CAAQ,mDAAR,CAAvB,CAJd,CAMIa,QAAUV,sBAAA,CAAuBH,OAAA,CAAQ,sDAAR,CAAvB,CAsFdC,OAAOC,CAAAA,OAAP,CAAiBA,OAAQI,CAAAA,OApG0E;",
"sources":["node_modules/date-fns/set/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$date_fns$set$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = set;\n\nvar _index = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../setMonth/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../_lib/toInteger/index.js\"));\n\nvar _index4 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name set\n * @category Common Helpers\n * @summary Set date values to a given date.\n *\n * @description\n * Set date values to a given date.\n *\n * Sets time values to date from object `values`.\n * A value is not set if it is undefined or null or doesn't exist in `values`.\n *\n * Note about bundle size: `set` does not internally use `setX` functions from date-fns but instead opts\n * to use native `Date#setX` methods. If you use this function, you may not want to include the\n * other `setX` functions that date-fns provides if you are concerned about the bundle size.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Object} values - an object with options\n * @param {Number} [values.year] - the number of years to be set\n * @param {Number} [values.month] - the number of months to be set\n * @param {Number} [values.date] - the number of days to be set\n * @param {Number} [values.hours] - the number of hours to be set\n * @param {Number} [values.minutes] - the number of minutes to be set\n * @param {Number} [values.seconds] - the number of seconds to be set\n * @param {Number} [values.milliseconds] - the number of milliseconds to be set\n * @returns {Date} the new date with options set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `values` must be an object\n *\n * @example\n * // Transform 1 September 2014 into 20 October 2015 in a single line:\n * var result = set(new Date(2014, 8, 20), { year: 2015, month: 9, date: 20 })\n * //=> Tue Oct 20 2015 00:00:00\n *\n * @example\n * // Set 12 PM to 1 September 2014 01:23:45 to 1 September 2014 12:00:00:\n * var result = set(new Date(2014, 8, 1, 1, 23, 45), { hours: 12 })\n * //=> Mon Sep 01 2014 12:23:45\n */\nfunction set(dirtyDate, values) {\n  (0, _index4.default)(2, arguments);\n\n  if (typeof values !== 'object' || values === null) {\n    throw new RangeError('values parameter must be an object');\n  }\n\n  var date = (0, _index.default)(dirtyDate); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n\n  if (isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n\n  if (values.year != null) {\n    date.setFullYear(values.year);\n  }\n\n  if (values.month != null) {\n    date = (0, _index2.default)(date, values.month);\n  }\n\n  if (values.date != null) {\n    date.setDate((0, _index3.default)(values.date));\n  }\n\n  if (values.hours != null) {\n    date.setHours((0, _index3.default)(values.hours));\n  }\n\n  if (values.minutes != null) {\n    date.setMinutes((0, _index3.default)(values.minutes));\n  }\n\n  if (values.seconds != null) {\n    date.setSeconds((0, _index3.default)(values.seconds));\n  }\n\n  if (values.milliseconds != null) {\n    date.setMilliseconds((0, _index3.default)(values.milliseconds));\n  }\n\n  return date;\n}\n\nmodule.exports = exports.default;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","set","dirtyDate","values","_index4","arguments","RangeError","date","_index","isNaN","getTime","Date","NaN","year","setFullYear","month","_index2","setDate","_index3","hours","setHours","minutes","setMinutes","seconds","setSeconds","milliseconds","setMilliseconds"]
}

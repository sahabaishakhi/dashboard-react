{
"version":3,
"file":"module$node_modules$date_fns$differenceInMonths$index.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,qDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAkBlHC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEE,QAASF,GAAX,CAAvC,CAfrCG,MAAOC,CAAAA,cAAP,CAAsBN,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CO,MAAO,CAAA,CADoC,CAA7C,CAGAP,QAAQI,CAAAA,OAAR,CAoCAI,QAA2B,CAACC,aAAD,CAAgBC,cAAhB,CAAgC,CACzD,GAAIC,OAAQP,CAAAA,OAAZ,EAAqB,CAArB,CAAwBQ,SAAxB,CACA,KAAIC,SAAW,GAAIC,MAAOV,CAAAA,OAAX,EAAoBK,aAApB,CAAf,CACIM,UAAY,GAAID,MAAOV,CAAAA,OAAX,EAAoBM,cAApB,CADhB,CAEIM,KAAO,GAAIC,OAAQb,CAAAA,OAAZ,EAAqBS,QAArB,CAA+BE,SAA/B,CAFX,CAGIG,WAAaC,IAAKC,CAAAA,GAAL,CAAS,GAAIC,OAAQjB,CAAAA,OAAZ,EAAqBS,QAArB;AAA+BE,SAA/B,CAAT,CAGA,EAAjB,CAAIG,UAAJ,CACEI,SADF,CACW,CADX,EAG8B,CAe5B,GAfIT,QAASU,CAAAA,QAAT,EAeJ,EAfsD,EAetD,CAfiCV,QAASW,CAAAA,OAAT,EAejC,EAZEX,QAASY,CAAAA,OAAT,CAAiB,EAAjB,CAYF,CATAZ,QAASa,CAAAA,QAAT,CAAkBb,QAASU,CAAAA,QAAT,EAAlB,CAAwCP,IAAxC,CAA+CE,UAA/C,CASA,CANIS,QAMJ,CANyB,GAAIV,OAAQb,CAAAA,OAAZ,EAAqBS,QAArB,CAA+BE,SAA/B,CAMzB,GANuE,CAACC,IAMxE,CAJI,GAAIY,OAAQxB,CAAAA,OAAZ,EAAqB,GAAIU,MAAOV,CAAAA,OAAX,EAAoBK,aAApB,CAArB,CAIJ,EAJ+E,CAI/E,GAJgES,UAIhE,EAJuI,CAIvI,GAJoF,GAAID,OAAQb,CAAAA,OAAZ,EAAqBK,aAArB,CAAoCM,SAApC,CAIpF,GAHEY,QAGF,CAHuB,CAAA,CAGvB,EAAAL,SAAA,CAASN,IAAT,EAAiBE,UAAjB,CAA8BW,MAAA,CAAOF,QAAP,CAA9B,CAlBF,CAsBA,OAAkB,EAAX,GAAAL,SAAA,CAAe,CAAf,CAAmBA,SA9B+B,CAlC3D,KAAIR,OAASb,sBAAA,CAAuBH,OAAA,CAAQ,2CAAR,CAAvB,CAAb;AAEIuB,QAAUpB,sBAAA,CAAuBH,OAAA,CAAQ,+DAAR,CAAvB,CAFd,CAIImB,QAAUhB,sBAAA,CAAuBH,OAAA,CAAQ,+CAAR,CAAvB,CAJd,CAMIa,QAAUV,sBAAA,CAAuBH,OAAA,CAAQ,sDAAR,CAAvB,CANd,CAQI8B,QAAU3B,sBAAA,CAAuBH,OAAA,CAAQ,qDAAR,CAAvB,CA2DdC,OAAOC,CAAAA,OAAP,CAAiBA,OAAQI,CAAAA,OA3EyF;",
"sources":["node_modules/date-fns/differenceInMonths/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$date_fns$differenceInMonths$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = differenceInMonths;\n\nvar _index = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../differenceInCalendarMonths/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../compareAsc/index.js\"));\n\nvar _index4 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nvar _index5 = _interopRequireDefault(require(\"../isLastDayOfMonth/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates using trunc as a default rounding method.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nfunction differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  (0, _index4.default)(2, arguments);\n  var dateLeft = (0, _index.default)(dirtyDateLeft);\n  var dateRight = (0, _index.default)(dirtyDateRight);\n  var sign = (0, _index3.default)(dateLeft, dateRight);\n  var difference = Math.abs((0, _index2.default)(dateLeft, dateRight));\n  var result; // Check for the difference of less than month\n\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      dateLeft.setDate(30);\n    }\n\n    dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n\n    var isLastMonthNotFull = (0, _index3.default)(dateLeft, dateRight) === -sign; // Check for cases of one full calendar month\n\n    if ((0, _index5.default)((0, _index.default)(dirtyDateLeft)) && difference === 1 && (0, _index3.default)(dirtyDateLeft, dateRight) === 1) {\n      isLastMonthNotFull = false;\n    }\n\n    result = sign * (difference - Number(isLastMonthNotFull));\n  } // Prevent negative zero\n\n\n  return result === 0 ? 0 : result;\n}\n\nmodule.exports = exports.default;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","differenceInMonths","dirtyDateLeft","dirtyDateRight","_index4","arguments","dateLeft","_index","dateRight","sign","_index3","difference","Math","abs","_index2","result","getMonth","getDate","setDate","setMonth","isLastMonthNotFull","_index5","Number"]
}

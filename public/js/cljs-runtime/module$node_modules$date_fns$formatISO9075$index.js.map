{
"version":3,
"file":"module$node_modules$date_fns$formatISO9075$index.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAA,gDAAA,CAAqE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAc7GC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEE,QAASF,GAAX,CAAvC,CAXrCG,MAAOC,CAAAA,cAAP,CAAsBN,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CO,MAAO,CAAA,CADoC,CAA7C,CAGAP,QAAQI,CAAAA,OAAR,CAgDAI,QAAsB,CAACC,SAAD,CAAYC,YAAZ,CAA0B,CAC9C,GAAuB,CAAvB,CAAIC,SAAUC,CAAAA,MAAd,CACE,KAAM,KAAIC,SAAJ,CAAc,gCAAiCC,CAAAA,MAAjC,CAAwCH,SAAUC,CAAAA,MAAlD,CAA0D,UAA1D,CAAd,CAAN,CAGF,IAAIG,aAAe,GAAIC,MAAOZ,CAAAA,OAAX,EAAoBK,SAApB,CAEnB,IAAI,CAAC,GAAIQ,OAAQb,CAAAA,OAAZ,EAAqBW,YAArB,CAAL,CACE,KAAM,KAAIG,UAAJ,CAAe,oBAAf,CAAN;AAGF,IAAIC,QAAUT,YAAVS,EAA0B,EAA9B,CACIC,OAA2B,IAAlB,EAAAD,OAAQC,CAAAA,MAAR,CAAyB,UAAzB,CAAsCC,MAAA,CAAOF,OAAQC,CAAAA,MAAf,CADnD,CAEIE,eAA2C,IAA1B,EAAAH,OAAQG,CAAAA,cAAR,CAAiC,UAAjC,CAA8CD,MAAA,CAAOF,OAAQG,CAAAA,cAAf,CAEnE,IAAe,UAAf,GAAIF,MAAJ,EAAwC,OAAxC,GAA6BA,MAA7B,CACE,KAAM,KAAIF,UAAJ,CAAe,sCAAf,CAAN,CAGF,GAAuB,MAAvB,GAAII,cAAJ,EAAoD,MAApD,GAAiCA,cAAjC,EAAiF,UAAjF,GAA8DA,cAA9D,CACE,KAAM,KAAIJ,UAAJ,CAAe,sDAAf,CAAN,CAGEK,OAAAA,CAAS,EACb,KAAIC,cAA2B,UAAX,GAAAJ,MAAA,CAAwB,GAAxB,CAA8B,EAC9CK,OAAAA,CAA2B,UAAX;AAAAL,MAAA,CAAwB,GAAxB,CAA8B,EAElD,IAAuB,MAAvB,GAAIE,cAAJ,CAA+B,CACzBI,OAAAA,CAAM,GAAIC,OAAQvB,CAAAA,OAAZ,EAAqBW,YAAaa,CAAAA,OAAb,EAArB,CAA6C,CAA7C,CACV,KAAIC,MAAQ,GAAIF,OAAQvB,CAAAA,OAAZ,EAAqBW,YAAae,CAAAA,QAAb,EAArB,CAA+C,CAA/C,CAAkD,CAAlD,CAAZ,CACIC,KAAO,GAAIJ,OAAQvB,CAAAA,OAAZ,EAAqBW,YAAaiB,CAAAA,WAAb,EAArB,CAAiD,CAAjD,CAEXT,QAAA,CAAS,EAAGT,CAAAA,MAAH,CAAUiB,IAAV,CAAgBjB,CAAAA,MAAhB,CAAuBU,aAAvB,CAAsCV,CAAAA,MAAtC,CAA6Ce,KAA7C,CAAoDf,CAAAA,MAApD,CAA2DU,aAA3D,CAA0EV,CAAAA,MAA1E,CAAiFY,OAAjF,CALoB,CASR,MAAvB,GAAIJ,cAAJ,GACMW,cAMJ,CANW,GAAIN,OAAQvB,CAAAA,OAAZ,EAAqBW,YAAamB,CAAAA,QAAb,EAArB,CAA8C,CAA9C,CAMX,CALIC,aAKJ,CALa,GAAIR,OAAQvB,CAAAA,OAAZ,EAAqBW,YAAaqB,CAAAA,UAAb,EAArB,CAAgD,CAAhD,CAKb,CAJIC,YAIJ,CAJa,GAAIV,OAAQvB,CAAAA,OAAZ,EAAqBW,YAAauB,CAAAA,UAAb,EAArB;AAAgD,CAAhD,CAIb,CAFIC,KAEJ,CAF2B,EAAX,GAAAhB,OAAA,CAAgB,EAAhB,CAAqB,GAErC,CAAAA,OAAA,CAAS,EAAGT,CAAAA,MAAH,CAAUS,OAAV,CAAkBT,CAAAA,MAAlB,CAAyByB,KAAzB,CAAoCzB,CAAAA,MAApC,CAA2CmB,cAA3C,CAAiDnB,CAAAA,MAAjD,CAAwDW,MAAxD,CAAuEX,CAAAA,MAAvE,CAA8EqB,aAA9E,CAAsFrB,CAAAA,MAAtF,CAA6FW,MAA7F,CAA4GX,CAAAA,MAA5G,CAAmHuB,YAAnH,CAPX,CAUA,OAAOd,QA9CuC,CA9ChD,KAAIP,OAASf,sBAAA,CAAuBH,OAAA,CAAQ,2CAAR,CAAvB,CAAb,CAEImB,QAAUhB,sBAAA,CAAuBH,OAAA,CAAQ,4CAAR,CAAvB,CAFd,CAII6B,QAAU1B,sBAAA,CAAuBH,OAAA,CAAQ,yDAAR,CAAvB,CA2FdC,OAAOC,CAAAA,OAAP,CAAiBA,OAAQI,CAAAA,OAvGoF;",
"sources":["node_modules/date-fns/formatISO9075/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$date_fns$formatISO9075$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = formatISO9075;\n\nvar _index = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../isValid/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../_lib/addLeadingZeros/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name formatISO9075\n * @category Common Helpers\n * @summary Format the date according to the ISO 9075 standard (https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html#function_get-format).\n *\n * @description\n * Return the formatted date string in ISO 9075 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.\n * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time, or both.\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.format` must be 'extended' or 'basic'\n * @throws {RangeError} `options.represenation` must be 'date', 'time' or 'complete'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18 19:00:52'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075, short format:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })\n * //=> '20190918 190052'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format, date only:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })\n * //=> '2019-09-18'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format, time only:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })\n * //=> '19:00:52'\n */\nfunction formatISO9075(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 argument required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var originalDate = (0, _index.default)(dirtyDate);\n\n  if (!(0, _index2.default)(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var options = dirtyOptions || {};\n  var format = options.format == null ? 'extended' : String(options.format);\n  var representation = options.representation == null ? 'complete' : String(options.representation);\n\n  if (format !== 'extended' && format !== 'basic') {\n    throw new RangeError(\"format must be 'extended' or 'basic'\");\n  }\n\n  if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {\n    throw new RangeError(\"representation must be 'date', 'time', or 'complete'\");\n  }\n\n  var result = '';\n  var dateDelimiter = format === 'extended' ? '-' : '';\n  var timeDelimiter = format === 'extended' ? ':' : ''; // Representation is either 'date' or 'complete'\n\n  if (representation !== 'time') {\n    var day = (0, _index3.default)(originalDate.getDate(), 2);\n    var month = (0, _index3.default)(originalDate.getMonth() + 1, 2);\n    var year = (0, _index3.default)(originalDate.getFullYear(), 4); // yyyyMMdd or yyyy-MM-dd.\n\n    result = \"\".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);\n  } // Representation is either 'time' or 'complete'\n\n\n  if (representation !== 'date') {\n    var hour = (0, _index3.default)(originalDate.getHours(), 2);\n    var minute = (0, _index3.default)(originalDate.getMinutes(), 2);\n    var second = (0, _index3.default)(originalDate.getSeconds(), 2); // If there's also date, separate it with time with a space\n\n    var separator = result === '' ? '' : ' '; // HHmmss or HH:mm:ss.\n\n    result = \"\".concat(result).concat(separator).concat(hour).concat(timeDelimiter).concat(minute).concat(timeDelimiter).concat(second);\n  }\n\n  return result;\n}\n\nmodule.exports = exports.default;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","formatISO9075","dirtyDate","dirtyOptions","arguments","length","TypeError","concat","originalDate","_index","_index2","RangeError","options","format","String","representation","result","dateDelimiter","timeDelimiter","day","_index3","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","second","getSeconds","separator"]
}

shadow$provide.module$node_modules$$material_ui$lab$TreeView$TreeView=function(global,require,module,exports){function arrayDiff(arr1,arr2){if(arr1.length!==arr2.length)return!0;for(var i=0;i<arr1.length;i+=1)if(arr1[i]!==arr2[i])return!0;return!1}global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");var _interopRequireDefault=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=
exports.styles=void 0;var _extends2=_interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$extends")),_slicedToArray2=_interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),_objectWithoutProperties2=_interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$objectWithoutProperties")),React=global(require("module$node_modules$react$index")),_clsx=_interopRequireDefault(require("module$node_modules$clsx$dist$clsx"));global=_interopRequireDefault(require("module$node_modules$prop_types$index"));
module=require("module$node_modules$$material_ui$core$esm$styles$index");var _utils=require("module$node_modules$$material_ui$core$esm$utils$index"),_TreeViewContext=_interopRequireDefault(require("module$node_modules$$material_ui$lab$TreeView$TreeViewContext"));require={root:{padding:0,margin:0,listStyle:"none"}};exports.styles=require;var findNextFirstChar=function(firstChars,startIndex,char){for(;startIndex<firstChars.length;startIndex+=1)if(char===firstChars[startIndex])return startIndex;return-1},
defaultExpandedDefault=[],defaultSelectedDefault=[];_interopRequireDefault=React.forwardRef(function(props,ref){var children=props.children,classes=props.classes,className=props.className,defaultCollapseIcon=props.defaultCollapseIcon,defaultEndIcon=props.defaultEndIcon,_props$defaultExpande=props.defaultExpanded,defaultExpanded=void 0===_props$defaultExpande?defaultExpandedDefault:_props$defaultExpande;_props$defaultExpande=props.defaultExpandIcon;var defaultParentIcon=props.defaultParentIcon,_props$defaultSelecte=
props.defaultSelected,defaultSelected=void 0===_props$defaultSelecte?defaultSelectedDefault:_props$defaultSelecte;_props$defaultSelecte=props.disableSelection;_props$defaultSelecte=void 0===_props$defaultSelecte?!1:_props$defaultSelecte;var _props$multiSelect=props.multiSelect,multiSelect=void 0===_props$multiSelect?!1:_props$multiSelect,expandedProp=props.expanded,onNodeSelect=props.onNodeSelect,onNodeToggle=props.onNodeToggle;_props$multiSelect=props.selected;props=(0,_objectWithoutProperties2.default)(props,
"children classes className defaultCollapseIcon defaultEndIcon defaultExpanded defaultExpandIcon defaultParentIcon defaultSelected disableSelection multiSelect expanded onNodeSelect onNodeToggle selected".split(" "));var _React$useState=React.useState(null),tabbable=_React$useState[0],setTabbable=_React$useState[1];_React$useState=React.useState(null);var focusedNodeId=_React$useState[0],setFocusedNodeId=_React$useState[1],nodeMap=React.useRef({}),firstCharMap=React.useRef({}),visibleNodes=React.useRef([]);
defaultExpanded=(0,_utils.useControlled)({controlled:expandedProp,default:defaultExpanded,name:"TreeView",state:"expanded"});defaultExpanded=(0,_slicedToArray2.default)(defaultExpanded,2);var expanded=defaultExpanded[0],setExpandedState=defaultExpanded[1];defaultSelected=(0,_utils.useControlled)({controlled:_props$multiSelect,default:defaultSelected,name:"TreeView",state:"selected"});defaultSelected=(0,_slicedToArray2.default)(defaultSelected,2);var selected=defaultSelected[0],setSelectedState=defaultSelected[1],
isExpanded=React.useCallback(function(id){return Array.isArray(expanded)?-1!==expanded.indexOf(id):!1},[expanded]);defaultSelected=React.useCallback(function(id){return Array.isArray(selected)?-1!==selected.indexOf(id):selected===id},[selected]);var getNextNode=function(id){id=visibleNodes.current.indexOf(id);return-1!==id&&id+1<visibleNodes.current.length?visibleNodes.current[id+1]:null},getPreviousNode=function(id){id=visibleNodes.current.indexOf(id);return-1!==id&&0<=id-1?visibleNodes.current[id-
1]:null},getNodesInRange=function(a,b){a=visibleNodes.current.indexOf(a);b=visibleNodes.current.indexOf(b);return visibleNodes.current.slice(Math.min(a,b),Math.max(a,b)+1)},focus=function(id){id&&(setTabbable(id),setFocusedNodeId(id))},lastSelectedNode=React.useRef(null),lastSelectionWasRange=React.useRef(!1),currentRangeSelection=React.useRef([]),handleRangeArrowSelect=function(event,nodes){var base=selected,start=nodes.start,next=nodes.next,current=nodes.current;next&&current&&(-1===currentRangeSelection.current.indexOf(current)&&
(currentRangeSelection.current=[]),lastSelectionWasRange.current?-1!==currentRangeSelection.current.indexOf(next)?(base=base.filter(function(id){return id===start||id!==current}),currentRangeSelection.current=currentRangeSelection.current.filter(function(id){return id===start||id!==current})):(base.push(next),currentRangeSelection.current.push(next)):(base.push(next),currentRangeSelection.current.push(current,next)),onNodeSelect&&onNodeSelect(event,base),setSelectedState(base))},handleRangeSelect=
function(event,nodes){var base=selected,start=nodes.start;nodes=nodes.end;lastSelectionWasRange.current&&(base=selected.filter(function(id){return-1===currentRangeSelection.current.indexOf(id)}));start=getNodesInRange(start,nodes);currentRangeSelection.current=start;var newSelected=base.concat(start);newSelected=newSelected.filter(function(id,i){return newSelected.indexOf(id)===i});onNodeSelect&&onNodeSelect(event,newSelected);setSelectedState(newSelected)},handleMultipleSelect=function(event,value){var newSelected=
[];newSelected=-1!==selected.indexOf(value)?selected.filter(function(id){return id!==value}):[value].concat(selected);onNodeSelect&&onNodeSelect(event,newSelected);setSelectedState(newSelected)};defaultExpanded=function(event,id){var multiple=2<arguments.length&&void 0!==arguments[2]?arguments[2]:!1;return id?(multiple?handleMultipleSelect(event,id):(multiple=multiSelect?[id]:id,onNodeSelect&&onNodeSelect(event,multiple),setSelectedState(multiple)),lastSelectedNode.current=id,lastSelectionWasRange.current=
!1,currentRangeSelection.current=[],!0):!1};var selectRange=function(event,nodes){var _nodes$start=nodes.start;_nodes$start=void 0===_nodes$start?lastSelectedNode.current:_nodes$start;var end=nodes.end,current=nodes.current;2<arguments.length&&void 0!==arguments[2]&&arguments[2]?handleRangeArrowSelect(event,{start:_nodes$start,next:end,current}):handleRangeSelect(event,{start:_nodes$start,end});return lastSelectionWasRange.current=!0};_props$multiSelect=function(event,id){lastSelectedNode.current||
(lastSelectedNode.current=id);return selectRange(event,{start:lastSelectionWasRange.current?lastSelectedNode.current:id,end:visibleNodes.current[0]})};expandedProp=function(event,id){lastSelectedNode.current||(lastSelectedNode.current=id);return selectRange(event,{start:lastSelectionWasRange.current?lastSelectedNode.current:id,end:visibleNodes.current[visibleNodes.current.length-1]})};_React$useState=function(event,id){return selectRange(event,{end:getNextNode(id),current:id},!0)};var selectPreviousNode=
function(event,id){return selectRange(event,{end:getPreviousNode(id),current:id},!0)},selectAllNodes=function(event){return selectRange(event,{start:visibleNodes.current[0],end:visibleNodes.current[visibleNodes.current.length-1]})},getNodesToRemove=React.useCallback(function(id){var map=nodeMap.current[id],nodes=[];map&&(nodes.push(id),map.children&&(nodes.concat(map.children),map.children.forEach(function(node){nodes.concat(getNodesToRemove(node))})));return nodes},[]),cleanUpFirstCharMap=React.useCallback(function(nodes){var newMap=
(0,_extends2.default)({},firstCharMap.current);nodes.forEach(function(node){newMap[node]&&delete newMap[node]});firstCharMap.current=newMap},[]),removeNodeFromNodeMap=React.useCallback(function(id){var nodes=getNodesToRemove(id);cleanUpFirstCharMap(nodes);var newMap=(0,_extends2.default)({},nodeMap.current);nodes.forEach(function(node){var map=newMap[node];if(map){if(map.parent){var parentMap=newMap[map.parent];if(parentMap&&parentMap.children){var parentChildren=parentMap.children.filter(function(c){return c!==
node});newMap[map.parent]=(0,_extends2.default)({},parentMap,{children:parentChildren})}}delete newMap[node]}});nodeMap.current=newMap;setFocusedNodeId(function(oldFocusedNodeId){return oldFocusedNodeId===id?null:oldFocusedNodeId})},[getNodesToRemove,cleanUpFirstCharMap]),prevChildIds=React.useRef([]),_React$useState3=React.useState(!1),childrenCalculated=_React$useState3[0],setChildrenCalculated=_React$useState3[1];React.useEffect(function(){var childIds=[];React.Children.forEach(children,function(child){React.isValidElement(child)&&
child.props.nodeId&&childIds.push(child.props.nodeId)});arrayDiff(prevChildIds.current,childIds)&&(nodeMap.current[-1]={parent:null,children:childIds},childIds.forEach(function(id,index){0===index&&setTabbable(id)}),visibleNodes.current=nodeMap.current[-1].children,prevChildIds.current=childIds,setChildrenCalculated(!0))},[children]);React.useEffect(function(){var buildVisible=function buildVisible(nodes){for(var list=[],i=0;i<nodes.length;i+=1){var item=nodes[i];list.push(item);var childs=nodeMap.current[item].children;
isExpanded(item)&&childs&&(list=list.concat(buildVisible(childs)))}return list};childrenCalculated&&(visibleNodes.current=buildVisible(nodeMap.current[-1].children))},[expanded,childrenCalculated,isExpanded,children]);_React$useState3=function(){return!1};return React.createElement(_TreeViewContext.default.Provider,{value:{icons:{defaultCollapseIcon,defaultExpandIcon:_props$defaultExpande,defaultParentIcon,defaultEndIcon},focus,focusFirstNode:function(){return focus(visibleNodes.current[0])},focusLastNode:function(){return focus(visibleNodes.current[visibleNodes.current.length-
1])},focusNextNode:function(id){return focus(getNextNode(id))},focusPreviousNode:function(id){return focus(getPreviousNode(id))},focusByFirstCharacter:function(id,char){char=char.toLowerCase();var firstCharIds=[],firstChars=[];Object.keys(firstCharMap.current).forEach(function(nodeId){var firstChar=firstCharMap.current[nodeId],map=nodeMap.current[nodeId];if(map.parent?isExpanded(map.parent):1)firstCharIds.push(nodeId),firstChars.push(firstChar)});id=firstCharIds.indexOf(id)+1;id===nodeMap.current.length&&
(id=0);id=findNextFirstChar(firstChars,id,char);-1===id&&(id=findNextFirstChar(firstChars,0,char));-1<id&&focus(firstCharIds[id])},expandAllSiblings:function(event,id){id=(id=nodeMap.current[nodeMap.current[id].parent])?id.children.filter(function(child){return!isExpanded(child)}):nodeMap.current[-1].children.filter(function(node){return!isExpanded(node)});var newExpanded=expanded.concat(id);0<id.length&&(setExpandedState(newExpanded),onNodeToggle&&onNodeToggle(event,newExpanded))},toggleExpansion:function(event){var value=
1<arguments.length&&void 0!==arguments[1]?arguments[1]:focusedNodeId;if(-1!==expanded.indexOf(value)){var newExpanded=expanded.filter(function(id){return id!==value});setTabbable(function(oldTabbable){var map=nodeMap.current[oldTabbable];return oldTabbable&&(map&&map.parent?map.parent.id:null)===value?value:oldTabbable})}else newExpanded=[value].concat(expanded);onNodeToggle&&onNodeToggle(event,newExpanded);setExpandedState(newExpanded)},isExpanded,isFocused:function(id){return focusedNodeId===id},
isSelected:defaultSelected,selectNode:_props$defaultSelecte?_React$useState3:defaultExpanded,selectRange:_props$defaultSelecte?_React$useState3:selectRange,selectNextNode:_props$defaultSelecte?_React$useState3:_React$useState,selectPreviousNode:_props$defaultSelecte?_React$useState3:selectPreviousNode,rangeSelectToFirst:_props$defaultSelecte?_React$useState3:_props$multiSelect,rangeSelectToLast:_props$defaultSelecte?_React$useState3:expandedProp,selectAllNodes:_props$defaultSelecte?_React$useState3:
selectAllNodes,isTabbable:function(id){return tabbable===id},multiSelect,getParent:function(id){return nodeMap.current[id].parent},mapFirstChar:function(id,firstChar){firstCharMap.current[id]=firstChar},addNodeToNodeMap:function(id,childrenIds){nodeMap.current[id]=(0,_extends2.default)({},nodeMap.current[id],{children:childrenIds,id});childrenIds.forEach(function(childId){nodeMap.current[childId]=(0,_extends2.default)({},nodeMap.current[childId],{parent:id,id:childId})})},removeNodeFromNodeMap}},
React.createElement("ul",(0,_extends2.default)({role:"tree","aria-multiselectable":multiSelect,className:(0,_clsx.default)(classes.root,className),ref},props),children))});_interopRequireDefault.propTypes={children:global.default.node,classes:global.default.object,className:global.default.string,defaultCollapseIcon:global.default.node,defaultEndIcon:global.default.node,defaultExpanded:global.default.arrayOf(global.default.string),defaultExpandIcon:global.default.node,defaultParentIcon:global.default.node,
defaultSelected:global.default.oneOfType([global.default.arrayOf(global.default.string),global.default.string]),disableSelection:global.default.bool,expanded:global.default.arrayOf(global.default.string),multiSelect:global.default.bool,onNodeSelect:global.default.func,onNodeToggle:global.default.func,selected:global.default.oneOfType([global.default.arrayOf(global.default.string),global.default.string])};require=(0,module.withStyles)(require,{name:"MuiTreeView"})(_interopRequireDefault);exports.default=
require}
//# sourceMappingURL=module$node_modules$$material_ui$lab$TreeView$TreeView.js.map

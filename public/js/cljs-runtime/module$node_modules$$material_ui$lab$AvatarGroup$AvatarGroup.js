shadow$provide.module$node_modules$$material_ui$lab$AvatarGroup$AvatarGroup=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");var _interopRequireDefault=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=exports.styles=void 0;var _extends2=_interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$extends")),_objectWithoutProperties2=
_interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$objectWithoutProperties")),React=global(require("module$node_modules$react$index"));global=_interopRequireDefault(require("module$node_modules$prop_types$index"));var _reactIs=require("module$node_modules$react_is$index"),_clsx=_interopRequireDefault(require("module$node_modules$clsx$dist$clsx"));module=require("module$node_modules$$material_ui$core$esm$styles$index");var _Avatar=_interopRequireDefault(require("module$node_modules$$material_ui$core$esm$Avatar$index"));
require=require("module$node_modules$$material_ui$utils$index");var SPACINGS={small:-16,medium:null};_interopRequireDefault=function(theme){return{root:{display:"flex"},avatar:{border:"2px solid ".concat(theme.palette.background.default),marginLeft:-8,"\x26:first-child":{marginLeft:0}}}};exports.styles=_interopRequireDefault;var AvatarGroup=React.forwardRef(function(props,ref){var childrenProp=props.children,classes=props.classes,className=props.className,_props$max=props.max,max=void 0===_props$max?
5:_props$max;_props$max=props.spacing;_props$max=void 0===_props$max?"medium":_props$max;props=(0,_objectWithoutProperties2.default)(props,["children","classes","className","max","spacing"]);max=2>max?2:max;var children=React.Children.toArray(childrenProp).filter(function(child){(0,_reactIs.isFragment)(child)&&console.error("Material-UI: The AvatarGroup component doesn't accept a Fragment as a child.\nConsider providing an array instead.");return React.isValidElement(child)});childrenProp=children.length>
max?children.length-max+1:0;var marginLeft=_props$max&&void 0!==SPACINGS[_props$max]?SPACINGS[_props$max]:-_props$max;return React.createElement("div",(0,_extends2.default)({className:(0,_clsx.default)(classes.root,className),ref},props),children.slice(0,children.length-childrenProp).map(function(child,index){return React.cloneElement(child,{className:(0,_clsx.default)(child.props.className,classes.avatar),style:(0,_extends2.default)({zIndex:children.length-index,marginLeft:0===index?void 0:marginLeft},
child.props.style)})}),childrenProp?React.createElement(_Avatar.default,{className:classes.avatar,style:{zIndex:0,marginLeft}},"+",childrenProp):null)});AvatarGroup.propTypes={children:global.default.node,classes:global.default.object,className:global.default.string,max:(0,require.chainPropTypes)(global.default.number,function(props){if(2>props.max)throw Error("Material-UI: The prop `max` should be equal to 2 or above.\nA value below is clamped to 2.");}),spacing:global.default.oneOfType([global.default.oneOf(["medium",
"small"]),global.default.number])};require=(0,module.withStyles)(_interopRequireDefault,{name:"MuiAvatarGroup"})(AvatarGroup);exports.default=require}
//# sourceMappingURL=module$node_modules$$material_ui$lab$AvatarGroup$AvatarGroup.js.map

{
"version":3,
"file":"module$node_modules$date_fns$addBusinessDays$index.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,kDAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAoB/GC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEE,QAASF,GAAX,CAAvC,CAjBrCG,MAAOC,CAAAA,cAAP,CAAsBN,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CO,MAAO,CAAA,CADoC,CAA7C,CAGAP,QAAQI,CAAAA,OAAR,CAkCAI,QAAwB,CAACC,SAAD,CAAYC,WAAZ,CAAyB,CAC/C,GAAIC,OAAQP,CAAAA,OAAZ,EAAqB,CAArB,CAAwBQ,SAAxB,CACA,KAAIC,KAAO,GAAIC,OAAQV,CAAAA,OAAZ,EAAqBK,SAArB,CAAX,CACIM,iBAAmB,GAAIC,MAAOZ,CAAAA,OAAX,EAAoBS,IAApB,CADvB,CAEII,OAAS,GAAIC,OAAQd,CAAAA,OAAZ,EAAqBM,WAArB,CACb,IAAIS,KAAA,CAAMF,MAAN,CAAJ,CAAmB,MAAO,KAAIG,IAAJ,CAASC,GAAT,CAC1B,KAAIC,MAAQT,IAAKU,CAAAA,QAAL,EAAZ;AACIC,KAAgB,CAAT,CAAAP,MAAA,CAAa,CAAC,CAAd,CAAkB,CAD7B,CAEIQ,UAAY,GAAIP,OAAQd,CAAAA,OAAZ,EAAqBa,MAArB,CAA8B,CAA9B,CAChBJ,KAAKa,CAAAA,OAAL,CAAab,IAAKc,CAAAA,OAAL,EAAb,CAA0C,CAA1C,CAA8BF,SAA9B,CAIA,KAFIG,SAEJ,CAFeC,IAAKC,CAAAA,GAAL,CAASb,MAAT,CAAkB,CAAlB,CAEf,CAAkB,CAAlB,CAAOW,SAAP,CAAA,CACEf,IAAKa,CAAAA,OAAL,CAAab,IAAKc,CAAAA,OAAL,EAAb,CAA8BH,IAA9B,CACA,CAAK,GAAIR,MAAOZ,CAAAA,OAAX,EAAoBS,IAApB,CAAL,EAAgC,EAAAe,SAM9Bb,iBAAJ,EAAwB,GAAIC,MAAOZ,CAAAA,OAAX,EAAoBS,IAApB,CAAxB,EAAgE,CAAhE,GAAqDI,MAArD,GAGM,GAAIc,OAAQ3B,CAAAA,OAAZ,EAAqBS,IAArB,CACJ,EADgCA,IAAKa,CAAAA,OAAL,CAAab,IAAKc,CAAAA,OAAL,EAAb,EAAsC,CAAP,CAAAH,IAAA,CAAW,CAAX,CAAe,CAAC,CAA/C,EAChC,CAAI,GAAIQ,OAAQ5B,CAAAA,OAAZ,EAAqBS,IAArB,CAAJ,EAAgCA,IAAKa,CAAAA,OAAL,CAAab,IAAKc,CAAAA,OAAL,EAAb,EAAsC,CAAP,CAAAH,IAAA,CAAW,CAAX,CAAe,CAAC,CAA/C,EAJlC,CAQAX,KAAKoB,CAAAA,QAAL,CAAcX,KAAd,CACA,OAAOT,KA9BwC,CAhCjD,KAAIG,OAASf,sBAAA,CAAuBH,OAAA,CAAQ,8CAAR,CAAvB,CAAb;AAEIgB,QAAUb,sBAAA,CAAuBH,OAAA,CAAQ,2CAAR,CAAvB,CAFd,CAIIoB,QAAUjB,sBAAA,CAAuBH,OAAA,CAAQ,mDAAR,CAAvB,CAJd,CAMIa,QAAUV,sBAAA,CAAuBH,OAAA,CAAQ,sDAAR,CAAvB,CANd,CAQIkC,QAAU/B,sBAAA,CAAuBH,OAAA,CAAQ,6CAAR,CAAvB,CARd,CAUIiC,QAAU9B,sBAAA,CAAuBH,OAAA,CAAQ,+CAAR,CAAvB,CAuDdC,OAAOC,CAAAA,OAAP,CAAiBA,OAAQI,CAAAA,OAzEsF;",
"sources":["node_modules/date-fns/addBusinessDays/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$date_fns$addBusinessDays$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addBusinessDays;\n\nvar _index = _interopRequireDefault(require(\"../isWeekend/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../_lib/toInteger/index.js\"));\n\nvar _index4 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nvar _index5 = _interopRequireDefault(require(\"../isSunday/index.js\"));\n\nvar _index6 = _interopRequireDefault(require(\"../isSaturday/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name addBusinessDays\n * @category Day Helpers\n * @summary Add the specified number of business days (mon - fri) to the given date.\n *\n * @description\n * Add the specified number of business days (mon - fri) to the given date, ignoring weekends.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of business days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the business days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 business days to 1 September 2014:\n * const result = addBusinessDays(new Date(2014, 8, 1), 10)\n * //=> Mon Sep 15 2014 00:00:00 (skipped weekend days)\n */\nfunction addBusinessDays(dirtyDate, dirtyAmount) {\n  (0, _index4.default)(2, arguments);\n  var date = (0, _index2.default)(dirtyDate);\n  var startedOnWeekend = (0, _index.default)(date);\n  var amount = (0, _index3.default)(dirtyAmount);\n  if (isNaN(amount)) return new Date(NaN);\n  var hours = date.getHours();\n  var sign = amount < 0 ? -1 : 1;\n  var fullWeeks = (0, _index3.default)(amount / 5);\n  date.setDate(date.getDate() + fullWeeks * 7); // Get remaining days not part of a full week\n\n  var restDays = Math.abs(amount % 5); // Loops over remaining days\n\n  while (restDays > 0) {\n    date.setDate(date.getDate() + sign);\n    if (!(0, _index.default)(date)) restDays -= 1;\n  } // If the date is a weekend day and we reduce a dividable of\n  // 5 from it, we land on a weekend date.\n  // To counter this, we add days accordingly to land on the next business day\n\n\n  if (startedOnWeekend && (0, _index.default)(date) && amount !== 0) {\n    // If we're reducing days, we want to add days until we land on a weekday\n    // If we're adding days we want to reduce days until we land on a weekday\n    if ((0, _index6.default)(date)) date.setDate(date.getDate() + (sign < 0 ? 2 : -1));\n    if ((0, _index5.default)(date)) date.setDate(date.getDate() + (sign < 0 ? 1 : -2));\n  } // Restore hours to avoid DST lag\n\n\n  date.setHours(hours);\n  return date;\n}\n\nmodule.exports = exports.default;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","addBusinessDays","dirtyDate","dirtyAmount","_index4","arguments","date","_index2","startedOnWeekend","_index","amount","_index3","isNaN","Date","NaN","hours","getHours","sign","fullWeeks","setDate","getDate","restDays","Math","abs","_index6","_index5","setHours"]
}

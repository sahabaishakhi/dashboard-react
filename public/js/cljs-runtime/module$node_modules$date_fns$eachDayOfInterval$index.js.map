{
"version":3,
"file":"module$node_modules$date_fns$eachDayOfInterval$index.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,oDAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYjHC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEE,QAASF,GAAX,CAAvC,CATrCG,MAAOC,CAAAA,cAAP,CAAsBN,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CO,MAAO,CAAA,CADoC,CAA7C,CAGAP,QAAQI,CAAAA,OAAR,CAqEAI,QAA0B,CAACC,aAAD,CAAgBC,OAAhB,CAAyB,CACjD,GAAIC,OAAQP,CAAAA,OAAZ,EAAqB,CAArB,CAAwBQ,SAAxB,CACA,KAAIC,SAAWJ,aAAXI,EAA4B,EAAhC,CACIC,UAAY,GAAIC,MAAOX,CAAAA,OAAX,EAAoBS,QAASG,CAAAA,KAA7B,CAEZC,SAAAA,CADUC,GAAIH,MAAOX,CAAAA,OAAXc,EAAoBL,QAASM,CAAAA,GAA7BD,CACQE,CAAAA,OAAR,EAEd,IAAI,EAAEN,SAAUM,CAAAA,OAAV,EAAF,EAAyBH,QAAzB,CAAJ,CACE,KAAM,KAAII,UAAJ,CAAe,kBAAf,CAAN;AAGF,IAAIC,MAAQ,EACMR,UACNS,CAAAA,QAAZ,CAAqB,CAArB,CAAwB,CAAxB,CAA2B,CAA3B,CAA8B,CAA9B,CACA,KAAIC,KAAOd,OAAA,EAAW,MAAX,EAAqBA,QAArB,CAA+Be,MAAA,CAAOf,OAAQc,CAAAA,IAAf,CAA/B,CAAsD,CACjE,IAAW,CAAX,CAAIA,IAAJ,EAAgBE,KAAA,CAAMF,IAAN,CAAhB,CAA6B,KAAM,KAAIH,UAAJ,CAAe,gDAAf,CAAN,CAE7B,IAAA,CALkBP,SAKCM,CAAAA,OAAZ,EAAP,EAAgCH,QAAhC,CAAA,CACEK,KAAMK,CAAAA,IAAN,CAAW,GAAIZ,MAAOX,CAAAA,OAAX,EANKU,SAML,CAAX,CAEA,CARgBA,SAOJc,CAAAA,OAAZ,CAPgBd,SAOgBe,CAAAA,OAAZ,EAApB,CAA4CL,IAA5C,CACA,CARgBV,SAQJS,CAAAA,QAAZ,CAAqB,CAArB,CAAwB,CAAxB,CAA2B,CAA3B,CAA8B,CAA9B,CAGF,OAAOD,MAvB0C,CAnEnD,KAAIP,OAASd,sBAAA,CAAuBH,OAAA,CAAQ,2CAAR,CAAvB,CAAb,CAEIa,QAAUV,sBAAA,CAAuBH,OAAA,CAAQ,sDAAR,CAAvB,CA2FdC;MAAOC,CAAAA,OAAP,CAAiBA,OAAQI,CAAAA,OArGwF;",
"sources":["node_modules/date-fns/eachDayOfInterval/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$date_fns$eachDayOfInterval$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = eachDayOfInterval;\n\nvar _index = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name eachDayOfInterval\n * @category Interval Helpers\n * @summary Return the array of dates within the specified time interval.\n *\n * @description\n * Return the array of dates within the specified time interval.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `eachDay` to `eachDayOfInterval`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   eachDay(new Date(2014, 0, 10), new Date(2014, 0, 20))\n *\n *   // v2.0.0 onward\n *\n *   eachDayOfInterval(\n *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) }\n *   )\n *   ```\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.\n * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.step` must be a number greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * const result = eachDayOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 9, 10)\n * })\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\nfunction eachDayOfInterval(dirtyInterval, options) {\n  (0, _index2.default)(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = (0, _index.default)(interval.start);\n  var endDate = (0, _index.default)(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  var step = options && 'step' in options ? Number(options.step) : 1;\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push((0, _index.default)(currentDate));\n    currentDate.setDate(currentDate.getDate() + step);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n\n  return dates;\n}\n\nmodule.exports = exports.default;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","eachDayOfInterval","dirtyInterval","options","_index2","arguments","interval","startDate","_index","start","endTime","endDate","end","getTime","RangeError","dates","setHours","step","Number","isNaN","push","setDate","getDate"]
}

{
"version":3,
"file":"module$node_modules$$emotion$utils$dist$utils_browser_cjs.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,yDAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGtHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CAyCAH,QAAQI,CAAAA,mBAAR,CAtCAA,QAA4B,CAACC,UAAD,CAAaC,gBAAb,CAA+BC,UAA/B,CAA2C,CACrE,IAAIC,aAAe,EACnBD,WAAWE,CAAAA,KAAX,CAAiB,GAAjB,CAAsBC,CAAAA,OAAtB,CAA8B,QAAS,CAACC,SAAD,CAAY,CACnBC,IAAAA,EAA9B,GAAIP,UAAA,CAAWM,SAAX,CAAJ,CACEL,gBAAiBO,CAAAA,IAAjB,CAAsBR,UAAA,CAAWM,SAAX,CAAtB,CADF,CAGEH,YAHF,EAGkBG,SAHlB,CAG8B,GAJmB,CAAnD,CAOA,OAAOH,aAT8D,CAuCvER,QAAQc,CAAAA,YAAR,CA5BmBA,QAAqB,CAACC,KAAD,CAAQC,UAAR,CAAoBC,WAApB,CAAiC,CACvE,IAAIN;AAAYI,KAAMG,CAAAA,GAAlBP,CAAwB,GAAxBA,CAA8BK,UAAWG,CAAAA,IAO5B,EAAA,CALjB,GAKCF,WALD,EASsFL,IAAAA,EATtF,GASsDG,KAAMV,CAAAA,UAAN,CAAiBM,SAAjB,CATtD,GAUEI,KAAMV,CAAAA,UAAN,CAAiBM,SAAjB,CAVF,CAUgCK,UAAWI,CAAAA,MAV3C,CAaA,IAAwCR,IAAAA,EAAxC,GAAIG,KAAMM,CAAAA,QAAN,CAAeL,UAAWG,CAAAA,IAA1B,CAAJ,EAGE,EACoBJ,MAAMO,CAAAA,MAAN,CAAa,GAAb,CAAmBX,SAAnB,CAA8BY,UAA9B,CAAuCR,KAAMS,CAAAA,KAA7C,CAAoD,CAAA,CAApD,CAElB,CAAAD,UAAA,CAAUA,UAAQE,CAAAA,IAHpB,OAIqBb,IAAAA,EAJrB,GAISW,UAJT,CAHF,CAhBuE,CAjB6C;",
"sources":["node_modules/@emotion/utils/dist/utils.browser.cjs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$emotion$utils$dist$utils_browser_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar isBrowser = \"object\" !== 'undefined';\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className]);\n    } else {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false && cache.compat !== undefined) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      var maybeStyles = cache.insert(\".\" + className, current, cache.sheet, true);\n\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\nexports.getRegisteredStyles = getRegisteredStyles;\nexports.insertStyles = insertStyles;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","getRegisteredStyles","registered","registeredStyles","classNames","rawClassName","split","forEach","className","undefined","push","insertStyles","cache","serialized","isStringTag","key","name","styles","inserted","insert","current","sheet","next"]
}

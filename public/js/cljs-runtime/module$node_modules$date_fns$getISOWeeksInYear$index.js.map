{
"version":3,
"file":"module$node_modules$date_fns$getISOWeeksInYear$index.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,oDAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAcjHC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEE,QAASF,GAAX,CAAvC,CAXrCG,MAAOC,CAAAA,cAAP,CAAsBN,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CO,MAAO,CAAA,CADoC,CAA7C,CAGAP,QAAQI,CAAAA,OAAR,CAmCAI,QAA0B,CAACC,SAAD,CAAY,CACpC,GAAIC,OAAQN,CAAAA,OAAZ,EAAqB,CAArB,CAAwBO,SAAxB,CACA,KAAIC,SAAW,GAAIC,MAAOT,CAAAA,OAAX,EAAoBK,SAApB,CAEXK,SAAAA,CADWC,GAAIF,MAAOT,CAAAA,OAAXW,EAAoB,GAAIC,OAAQZ,CAAAA,OAAZ,EAAqBQ,QAArB,CAA+B,EAA/B,CAApBG,CACKE,CAAAA,OAAT,EAAPH,CAA4BF,QAASK,CAAAA,OAAT,EAIhC,OAAOC,KAAKC,CAAAA,KAAL,CAAWL,QAAX,CAAkBM,oBAAlB,CAR6B,CAjCtC,KAAIP;AAASZ,sBAAA,CAAuBH,OAAA,CAAQ,uDAAR,CAAvB,CAAb,CAEIkB,QAAUf,sBAAA,CAAuBH,OAAA,CAAQ,6CAAR,CAAvB,CAFd,CAIIY,QAAUT,sBAAA,CAAuBH,OAAA,CAAQ,sDAAR,CAAvB,CAJd,CAQIsB,qBAAuB,MAoC3BrB,OAAOC,CAAAA,OAAP,CAAiBA,OAAQI,CAAAA,OApDwF;",
"sources":["node_modules/date-fns/getISOWeeksInYear/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$date_fns$getISOWeeksInYear$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getISOWeeksInYear;\n\nvar _index = _interopRequireDefault(require(\"../startOfISOWeekYear/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../addWeeks/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name getISOWeeksInYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * @description\n * Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of ISO weeks in a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many weeks are in ISO week-numbering year 2015?\n * const result = getISOWeeksInYear(new Date(2015, 1, 11))\n * //=> 53\n */\n\nfunction getISOWeeksInYear(dirtyDate) {\n  (0, _index3.default)(1, arguments);\n  var thisYear = (0, _index.default)(dirtyDate);\n  var nextYear = (0, _index.default)((0, _index2.default)(thisYear, 60));\n  var diff = nextYear.valueOf() - thisYear.valueOf(); // Round the number of weeks to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK);\n}\n\nmodule.exports = exports.default;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","getISOWeeksInYear","dirtyDate","_index3","arguments","thisYear","_index","diff","nextYear","_index2","valueOf","Math","round","MILLISECONDS_IN_WEEK"]
}

{
"version":3,
"file":"module$node_modules$date_fns$formatDistance$index.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/date-fns/formatDistance/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$date_fns$formatDistance$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = formatDistance;\n\nvar _index = _interopRequireDefault(require(\"../compareAsc/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../differenceInMonths/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../differenceInSeconds/index.js\"));\n\nvar _index4 = _interopRequireDefault(require(\"../locale/en-US/index.js\"));\n\nvar _index5 = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index6 = _interopRequireDefault(require(\"../_lib/cloneObject/index.js\"));\n\nvar _index7 = _interopRequireDefault(require(\"../_lib/getTimezoneOffsetInMilliseconds/index.js\"));\n\nvar _index8 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWords ` to `formatDistance`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWords(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *\n *   // v2.0.0 onward\n *\n *   formatDistance(\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nfunction formatDistance(dirtyDate, dirtyBaseDate) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  (0, _index8.default)(2, arguments);\n  var locale = options.locale || _index4.default;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = (0, _index.default)(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = (0, _index6.default)(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = (0, _index5.default)(dirtyBaseDate);\n    dateRight = (0, _index5.default)(dirtyDate);\n  } else {\n    dateLeft = (0, _index5.default)(dirtyDate);\n    dateRight = (0, _index5.default)(dirtyBaseDate);\n  }\n\n  var seconds = (0, _index3.default)(dateRight, dateLeft);\n  var offsetInSeconds = ((0, _index7.default)(dateRight) - (0, _index7.default)(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = (0, _index2.default)(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}\n\nmodule.exports = exports.default;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","formatDistance","dirtyDate","dirtyBaseDate","options","arguments","length","undefined","_index8","locale","_index4","RangeError","comparison","_index","isNaN","localizeOptions","_index6","addSuffix","dateLeft","_index5","dateRight","seconds","_index3","offsetInSeconds","_index7","minutes","Math","round","includeSeconds","MINUTES_IN_DAY","hours","MINUTES_IN_ALMOST_TWO_DAYS","MINUTES_IN_MONTH","days","MINUTES_IN_TWO_MONTHS","months","_index2","nearestMonth","monthsSinceStartOfYear","years","floor"]
}

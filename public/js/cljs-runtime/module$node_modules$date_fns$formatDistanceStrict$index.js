shadow$provide.module$node_modules$date_fns$formatDistanceStrict$index=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(exports,"__esModule",{value:!0});exports.default=function(dirtyDate,dirtyBaseDate){var options=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{};(0,_index6.default)(2,arguments);var locale=options.locale||_index5.default;if(!locale.formatDistance)throw new RangeError("locale must contain localize.formatDistance property");
var comparison=(0,_index2.default)(dirtyDate,dirtyBaseDate);if(isNaN(comparison))throw new RangeError("Invalid time value");var localizeOptions=(0,_index4.default)(options);localizeOptions.addSuffix=!!options.addSuffix;localizeOptions.comparison=comparison;if(0<comparison){var dateLeft=(0,_index3.default)(dirtyBaseDate);var dateRight=(0,_index3.default)(dirtyDate)}else dateLeft=(0,_index3.default)(dirtyDate),dateRight=(0,_index3.default)(dirtyBaseDate);comparison=null==options.roundingMethod?"round":
String(options.roundingMethod);if("floor"===comparison)comparison=Math.floor;else if("ceil"===comparison)comparison=Math.ceil;else if("round"===comparison)comparison=Math.round;else throw new RangeError("roundingMethod must be 'floor', 'ceil' or 'round'");var milliseconds=dateRight.getTime()-dateLeft.getTime(),minutes=milliseconds/MILLISECONDS_IN_MINUTE;dateLeft=(0,_index.default)(dateRight)-(0,_index.default)(dateLeft);dateLeft=(milliseconds-dateLeft)/MILLISECONDS_IN_MINUTE;dateRight=null==options.unit?
1>minutes?"second":60>minutes?"minute":minutes<MINUTES_IN_DAY?"hour":dateLeft<MINUTES_IN_MONTH?"day":dateLeft<MINUTES_IN_YEAR?"month":"year":String(options.unit);if("second"===dateRight)return options=comparison(milliseconds/1E3),locale.formatDistance("xSeconds",options,localizeOptions);if("minute"===dateRight)return options=comparison(minutes),locale.formatDistance("xMinutes",options,localizeOptions);if("hour"===dateRight)return options=comparison(minutes/60),locale.formatDistance("xHours",options,
localizeOptions);if("day"===dateRight)return options=comparison(dateLeft/MINUTES_IN_DAY),locale.formatDistance("xDays",options,localizeOptions);if("month"===dateRight)return comparison=comparison(dateLeft/MINUTES_IN_MONTH),12===comparison&&"month"!==options.unit?locale.formatDistance("xYears",1,localizeOptions):locale.formatDistance("xMonths",comparison,localizeOptions);if("year"===dateRight)return options=comparison(dateLeft/MINUTES_IN_YEAR),locale.formatDistance("xYears",options,localizeOptions);
throw new RangeError("unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'");};var _index=_interopRequireDefault(require("module$node_modules$date_fns$_lib$getTimezoneOffsetInMilliseconds$index")),_index2=_interopRequireDefault(require("module$node_modules$date_fns$compareAsc$index")),_index3=_interopRequireDefault(require("module$node_modules$date_fns$toDate$index")),_index4=_interopRequireDefault(require("module$node_modules$date_fns$_lib$cloneObject$index")),_index5=_interopRequireDefault(require("module$node_modules$date_fns$locale$en_US$index")),
_index6=_interopRequireDefault(require("module$node_modules$date_fns$_lib$requiredArgs$index")),MILLISECONDS_IN_MINUTE=6E4,MINUTES_IN_DAY=1440,MINUTES_IN_MONTH=30*MINUTES_IN_DAY,MINUTES_IN_YEAR=365*MINUTES_IN_DAY;module.exports=exports.default}
//# sourceMappingURL=module$node_modules$date_fns$formatDistanceStrict$index.js.map

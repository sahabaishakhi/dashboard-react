shadow$provide.module$node_modules$$material_ui$system$styleFunctionSx=function(global,require,module,exports){function omit(input,fields){var output={};Object.keys(input).forEach(function(prop){-1===fields.indexOf(prop)&&(output[prop]=input[prop])});return output}function styleFunctionSx(styleFunction){var newStyleFunction=function(props){var output=styleFunction(props);return props.css?(0,_extends2.default)({},(0,_merge.default)(output,styleFunction((0,_extends2.default)({theme:props.theme},props.css))),
omit(props.css,[styleFunction.filterProps])):props.sx?(0,_extends2.default)({},(0,_merge.default)(output,styleFunction((0,_extends2.default)({theme:props.theme},props.sx))),omit(props.sx,[styleFunction.filterProps])):output};newStyleFunction.propTypes=(0,_extends2.default)({},styleFunction.propTypes,{css:(0,_utils.chainPropTypes)(_propTypes.default.object,function(props){return warnedOnce||void 0===props.css?null:(warnedOnce=!0,Error("Material-UI: The `css` prop is deprecated, please use the `sx` prop instead."))}),
sx:_propTypes.default.object});newStyleFunction.filterProps=["css","sx"].concat((0,_toConsumableArray2.default)(styleFunction.filterProps));return newStyleFunction}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.css=function(styleFunction){console.warn("Material-UI: The `css` function is deprecated. Use the `styleFunctionSx` instead.");return styleFunctionSx(styleFunction)};exports.default=void 0;var _toConsumableArray2=
global(require("module$node_modules$$babel$runtime$helpers$toConsumableArray")),_extends2=global(require("module$node_modules$$babel$runtime$helpers$extends")),_propTypes=global(require("module$node_modules$prop_types$index")),_utils=require("module$node_modules$$material_ui$utils$index"),_merge=global(require("module$node_modules$$material_ui$system$merge")),warnedOnce=!1;exports.default=styleFunctionSx}
//# sourceMappingURL=module$node_modules$$material_ui$system$styleFunctionSx.js.map

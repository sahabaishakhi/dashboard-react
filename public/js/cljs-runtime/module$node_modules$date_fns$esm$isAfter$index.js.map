{
"version":3,
"file":"module$node_modules$date_fns$esm$isAfter$index.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,8CAAA,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAY3GC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEE,QAASF,GAAX,CAAvC,CATrCG,MAAOC,CAAAA,cAAP,CAAsBN,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CO,MAAO,CAAA,CADoC,CAA7C,CAGAP,QAAQI,CAAAA,OAAR,CA8BAI,QAAgB,CAACC,SAAD,CAAYC,kBAAZ,CAAgC,CAC9C,GAAIC,OAAQP,CAAAA,OAAZ,EAAqB,CAArB,CAAwBQ,SAAxB,CACA,KAAIC,KAAO,GAAIC,MAAOV,CAAAA,OAAX,EAAoBK,SAApB,CAAX,CACIM,cAAgB,GAAID,MAAOV,CAAAA,OAAX,EAAoBM,kBAApB,CACpB,OAAOG,KAAKG,CAAAA,OAAL,EAAP,CAAwBD,aAAcC,CAAAA,OAAd,EAJsB,CA5BhD,KAAIF,OAASb,sBAAA,CAAuBH,OAAA,CAAQ,+CAAR,CAAvB,CAAb;AAEIa,QAAUV,sBAAA,CAAuBH,OAAA,CAAQ,0DAAR,CAAvB,CAV6F;",
"sources":["node_modules/date-fns/esm/isAfter/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$date_fns$esm$isAfter$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isAfter;\n\nvar _index = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name isAfter\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date that should be after the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is after the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * var result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\nfunction isAfter(dirtyDate, dirtyDateToCompare) {\n  (0, _index2.default)(2, arguments);\n  var date = (0, _index.default)(dirtyDate);\n  var dateToCompare = (0, _index.default)(dirtyDateToCompare);\n  return date.getTime() > dateToCompare.getTime();\n}\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","isAfter","dirtyDate","dirtyDateToCompare","_index2","arguments","date","_index","dateToCompare","getTime"]
}

{
"version":3,
"file":"module$node_modules$date_fns$isSameWeek$index.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,6CAAA,CAAkE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAY1GC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEE,QAASF,GAAX,CAAvC,CATrCG,MAAOC,CAAAA,cAAP,CAAsBN,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CO,MAAO,CAAA,CADoC,CAA7C,CAGAP,QAAQI,CAAAA,OAAR,CA0CAI,QAAmB,CAACC,aAAD,CAAgBC,cAAhB,CAAgCC,YAAhC,CAA8C,CAC/D,GAAIC,OAAQR,CAAAA,OAAZ,EAAqB,CAArB,CAAwBS,SAAxB,CACA,KAAIC,oBAAsB,GAAIC,MAAOX,CAAAA,OAAX,EAAoBK,aAApB,CAAmCE,YAAnC,CAA1B,CACIK,qBAAuB,GAAID,MAAOX,CAAAA,OAAX,EAAoBM,cAApB,CAAoCC,YAApC,CAC3B,OAAOG,oBAAoBG,CAAAA,OAApB,EAAP;AAAyCD,oBAAqBC,CAAAA,OAArB,EAJsB,CAxCjE,KAAIF,OAASd,sBAAA,CAAuBH,OAAA,CAAQ,gDAAR,CAAvB,CAAb,CAEIc,QAAUX,sBAAA,CAAuBH,OAAA,CAAQ,sDAAR,CAAvB,CA6CdC,OAAOC,CAAAA,OAAP,CAAiBA,OAAQI,CAAAA,OAvDiF;",
"sources":["node_modules/date-fns/isSameWeek/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$date_fns$isSameWeek$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isSameWeek;\n\nvar _index = _interopRequireDefault(require(\"../startOfWeek/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name isSameWeek\n * @category Week Helpers\n * @summary Are the given dates in the same week?\n *\n * @description\n * Are the given dates in the same week?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the dates are in the same week\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))\n * //=> true\n *\n * @example\n * // If week starts with Monday,\n * // are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {\n *   weekStartsOn: 1\n * })\n * //=> false\n */\nfunction isSameWeek(dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  (0, _index2.default)(2, arguments);\n  var dateLeftStartOfWeek = (0, _index.default)(dirtyDateLeft, dirtyOptions);\n  var dateRightStartOfWeek = (0, _index.default)(dirtyDateRight, dirtyOptions);\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();\n}\n\nmodule.exports = exports.default;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","isSameWeek","dirtyDateLeft","dirtyDateRight","dirtyOptions","_index2","arguments","dateLeftStartOfWeek","_index","dateRightStartOfWeek","getTime"]
}

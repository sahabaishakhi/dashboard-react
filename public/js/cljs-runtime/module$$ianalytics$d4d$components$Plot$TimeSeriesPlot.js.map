{
"version":3,
"file":"module$$ianalytics$d4d$components$Plot$TimeSeriesPlot.js",
"lineCount":75,
"mappings":"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",
"sources":["@ianalytics/d4d/components/Plot/TimeSeriesPlot.js"],
"sourcesContent":["import React, { useState, useMemo, useEffect } from \"goog:module$node_modules$react$index\";\nimport KRIndicator from \"/@ianalytics/d4d/components/KRIndicator.js\";\nimport { useStateValue } from \"/@ianalytics/d4d/components/StateProvider.js\";\nimport { parseISO } from \"goog:module$node_modules$date_fns$index\";\nimport { utcToZonedTime } from \"goog:module$node_modules$date_fns_tz$index\";\nimport XPlot from \"goog:module$node_modules$react_plotly_DOT_js$react_plotly\";\nimport styled from \"goog:module$node_modules$$emotion$styled$dist$styled_browser_cjs\";\nimport { plotlyDefaults } from \"/@ianalytics/d4d/theme.js\";\nimport { makeAnnotations, traceColors, widthOfMeanWindowInSeconds, allPlotlyButtons, toggleEventCreationIcon, autorange } from \"/@ianalytics/d4d/components/Plot/plotfuns.js\";\nconst Plot = XPlot.default;\nimport SystemaAPI from \"goog:io.ianalytics.d4d.api.systema\";\nimport TrendAPI from \"goog:io.ianalytics.d4d.api.trend\";\nimport UnitsAPI from \"goog:io.ianalytics.d4d.api.units\";\nimport { CircularProgress } from \"goog:module$node_modules$$material_ui$core$index\";\nexport default TimeSeriesPlot = function (props) {\n  const [plotData, setPlotData] = useState({});\n  const [fetching, setFetching] = useState(false);\n  const [annotations, setAnnotations] = useState([]);\n  const [shapes, setShapes] = useState([]);\n  const [s, dispatch] = useStateValue();\n  useEffect(() => {\n    let [eventAnnotations, eventShapes] = makeAnnotations(props.uids, s);\n    setAnnotations(eventAnnotations);\n    setShapes(eventShapes);\n  }, [props.uids, props.from, props.to, s.events, s.visibleEvents, s.pinnedEvents]);\n\n  function updateCustomRange(newRange) {\n    function correctPlotlyTimestamp(plotly_stamp) {\n      return plotly_stamp ? plotly_stamp.slice(0, 10) + \"T\" + plotly_stamp.slice(11) : \"\";\n    }\n\n    dispatch({\n      type: \"PRESELECT_TIME_RANGE\",\n      payload: newRange.map(correctPlotlyTimestamp).map(parseISO)\n    });\n  }\n\n  function selectTimeFromPlot() {\n    dispatch({\n      type: \"SWITCH_TO_PRESELECTED_TIME_RANGE\"\n    });\n  }\n\n  function setData(jsonData, uid) {\n    if (!jsonData || !jsonData.hasOwnProperty(\"time\")) {\n      return;\n    }\n\n    const dataCount = jsonData.time.length; // localize time\n\n    const timeZone = \"Europe/Berlin\";\n    /* TODO: make timezone configurable.  */\n\n    const localizedTime = jsonData.time.map(ts => utcToZonedTime(parseISO(ts), timeZone));\n    delete jsonData.time; // transform units\n\n    const displayUnit = SystemaAPI.displayUnit(uid);\n    const transformedValues = Object.values(jsonData).map(values => UnitsAPI.transform(values, displayUnit));\n    let newTraces = {};\n\n    for (let i = 0; i < transformedValues.length; ++i) {\n      newTraces[uid + i] = {\n        x: localizedTime,\n        y: transformedValues[i],\n        type: \"scatter\",\n        fill: \"tozeroy\",\n        name: `${SystemaAPI.plotTitle(uid)} ${i > 0 ? i : \"\"}`,\n        fillcolor: traceColors[(props.uids.indexOf(uid) + i) % traceColors.length] + \"22\",\n        line: {\n          color: traceColors[(props.uids.indexOf(uid) + i) % traceColors.length]\n        }\n      };\n    }\n\n    setPlotData(function (data) {\n      return { ...data,\n        ...newTraces\n      };\n    });\n    console.debug(\"read: \", Object.keys(jsonData).length - 1, // 'time' + one numerical entry for each timeseries.\n    \" x \", jsonData.time.length, \"data points.\");\n  }\n\n  function fetchData() {\n    setFetching(true);\n    setPlotData({});\n\n    for (const uid of props.uids) {\n      console.debug(`fetching new data for ${uid} in [${props.from}\n        , ${props.to}].`);\n      TrendAPI.getTrend(uid, props.from, props.to, widthOfMeanWindowInSeconds(props.from, props.to), function (data) {\n        setData(data, uid);\n      });\n    }\n\n    setFetching(false);\n    return function () {\n      setPlotData({});\n    };\n  }\n\n  useEffect(fetchData, [props.uids, props.from, props.to]);\n\n  function toggleEventCreation(from, to) {\n    dispatch({\n      type: \"OPEN_EVENT_CREATOR\",\n      payload: {\n        from: new Date(from),\n        to: new Date(to),\n        uids: props.uids\n      },\n      dispatch: dispatch\n    });\n  }\n\n  return useMemo(() => {\n    return fetching ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"60vw\",\n        height: \"300px\"\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, null)) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(KRIndicator, {\n      data: Object.values(plotData)\n    }), /*#__PURE__*/React.createElement(Plot, {\n      style: {\n        width: \"60vw\",\n        height: Object.keys(plotData).length <= 1 ? \"300px\" : \"600px\"\n      },\n      data: Object.values(plotData),\n      onSelected: e => e && e.range && toggleEventCreation(e.range.x[0], e.range.x[1]),\n      onUpdate: d => updateCustomRange(d.layout.xaxis.range),\n      config: {\n        modeBarButtonsToRemove: allPlotlyButtons,\n        modeBarButtonsToAdd: [{\n          name: s.plotDragMode === \"zoom\" ? \"Create Event\" : \"Zoom\",\n          icon: toggleEventCreationIcon,\n          direction: \"up\",\n          click: () => dispatch({\n            type: \"TOGGLE_PLOT_EVENT_CREATION_MODE\"\n          })\n        }, {\n          name: \"Use This Time Frame\",\n          // icon: pick one,\n          direction: \"up\",\n          click: selectTimeFromPlot\n        }]\n      },\n      layout: { ...plotlyDefaults,\n        autosize: true,\n        title: { ...plotlyDefaults.title_defaults,\n          text: `<b>${SystemaAPI.plotTitle(props.uids[0])}</b>`\n        },\n        yaxis: { ...plotlyDefaults.yaxis,\n          title: `[${SystemaAPI.displayUnit(props.uids[0])}]`,\n          ...(plotData && plotData !== {} ? {\n            range: autorange(plotData)\n          } : {})\n        },\n        dragmode: s.plotDragMode,\n        legend: {\n          orientation: \"h\"\n        },\n        selectdirection: \"h\",\n        annotations: plotData && annotations,\n        shapes: plotData && shapes\n      }\n    }));\n  }, [plotData, annotations, shapes, fetching, s.plotDragMode]);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"],
"names":["Plot","XPlot","default","$jscompDefaultExport","TimeSeriesPlot","props","updateCustomRange","newRange","correctPlotlyTimestamp","plotly_stamp","slice","dispatch","type","payload","map","parseISO","selectTimeFromPlot","setData","jsonData","uid","hasOwnProperty","dataCount","time","length","timeZone","localizedTime","ts","utcToZonedTime","displayUnit","SystemaAPI","transformedValues","Object","values","UnitsAPI","transform","newTraces","i","x","y","fill","name","plotTitle","fillcolor","traceColors","uids","indexOf","line","color","setPlotData","data","console","debug","keys","fetchData","setFetching","from","to","TrendAPI","getTrend","widthOfMeanWindowInSeconds","toggleEventCreation","Date","plotData","useState","fetching","annotations","setAnnotations","shapes","setShapes","s","useStateValue","useEffect","eventAnnotations","eventShapes","makeAnnotations","events","visibleEvents","pinnedEvents","useMemo","React","createElement","style","width","height","CircularProgress","Fragment","KRIndicator","onSelected","e","range","onUpdate","d","layout","xaxis","config","modeBarButtonsToRemove","allPlotlyButtons","modeBarButtonsToAdd","plotDragMode","icon","toggleEventCreationIcon","direction","click","plotlyDefaults","autosize","title","title_defaults","text","yaxis","autorange","dragmode","legend","orientation","selectdirection","$jscomp$tmp$exports$module$name"]
}

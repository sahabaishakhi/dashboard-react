shadow$provide.module$node_modules$$date_io$date_fns$build$index=function(global,require,module,exports){function _interopDefault(ex){return ex&&"object"===typeof ex&&"default"in ex?ex["default"]:ex}var addDays=_interopDefault(require("module$node_modules$date_fns$esm$addDays$index")),addMonths=_interopDefault(require("module$node_modules$date_fns$esm$addMonths$index")),addYears=_interopDefault(require("module$node_modules$date_fns$esm$addYears$index")),differenceInMilliseconds=_interopDefault(require("module$node_modules$date_fns$esm$differenceInMilliseconds$index")),
eachDayOfInterval=_interopDefault(require("module$node_modules$date_fns$esm$eachDayOfInterval$index")),endOfDay=_interopDefault(require("module$node_modules$date_fns$esm$endOfDay$index")),endOfWeek=_interopDefault(require("module$node_modules$date_fns$esm$endOfWeek$index")),endOfYear=_interopDefault(require("module$node_modules$date_fns$esm$endOfYear$index")),format=_interopDefault(require("module$node_modules$date_fns$esm$format$index")),getHours=_interopDefault(require("module$node_modules$date_fns$esm$getHours$index")),
getSeconds=_interopDefault(require("module$node_modules$date_fns$esm$getSeconds$index")),getYear=_interopDefault(require("module$node_modules$date_fns$esm$getYear$index")),isAfter=_interopDefault(require("module$node_modules$date_fns$esm$isAfter$index")),isBefore=_interopDefault(require("module$node_modules$date_fns$esm$isBefore$index")),isEqual=_interopDefault(require("module$node_modules$date_fns$esm$isEqual$index")),isSameDay=_interopDefault(require("module$node_modules$date_fns$esm$isSameDay$index")),
isSameYear=_interopDefault(require("module$node_modules$date_fns$esm$isSameYear$index")),isSameMonth=_interopDefault(require("module$node_modules$date_fns$esm$isSameMonth$index")),isSameHour=_interopDefault(require("module$node_modules$date_fns$esm$isSameHour$index")),isValid=_interopDefault(require("module$node_modules$date_fns$esm$isValid$index")),dateFnsParse=_interopDefault(require("module$node_modules$date_fns$esm$parse$index")),setHours=_interopDefault(require("module$node_modules$date_fns$esm$setHours$index")),
setMinutes=_interopDefault(require("module$node_modules$date_fns$esm$setMinutes$index")),setMonth=_interopDefault(require("module$node_modules$date_fns$esm$setMonth$index")),setSeconds=_interopDefault(require("module$node_modules$date_fns$esm$setSeconds$index")),setYear=_interopDefault(require("module$node_modules$date_fns$esm$setYear$index")),startOfDay=_interopDefault(require("module$node_modules$date_fns$esm$startOfDay$index")),startOfMonth=_interopDefault(require("module$node_modules$date_fns$esm$startOfMonth$index")),
endOfMonth=_interopDefault(require("module$node_modules$date_fns$esm$endOfMonth$index")),startOfWeek=_interopDefault(require("module$node_modules$date_fns$esm$startOfWeek$index")),startOfYear=_interopDefault(require("module$node_modules$date_fns$esm$startOfYear$index"));global=function(){function DateFnsUtils(_a){_a=(void 0===_a?{}:_a).locale;this.yearFormat="yyyy";this.yearMonthFormat="MMMM yyyy";this.dateTime12hFormat="MMMM do hh:mm aaaa";this.dateTime24hFormat="MMMM do HH:mm";this.time12hFormat=
"hh:mm a";this.time24hFormat="HH:mm";this.dateFormat="MMMM do";this.locale=_a}DateFnsUtils.prototype.addDays=function(value,count){return addDays(value,count)};DateFnsUtils.prototype.isValid=function(value){return isValid(this.date(value))};DateFnsUtils.prototype.getDiff=function(value,comparing){return differenceInMilliseconds(value,this.date(comparing))};DateFnsUtils.prototype.isAfter=function(value,comparing){return isAfter(value,comparing)};DateFnsUtils.prototype.isBefore=function(value,comparing){return isBefore(value,
comparing)};DateFnsUtils.prototype.startOfDay=function(value){return startOfDay(value)};DateFnsUtils.prototype.endOfDay=function(value){return endOfDay(value)};DateFnsUtils.prototype.getHours=function(value){return getHours(value)};DateFnsUtils.prototype.setHours=function(value,count){return setHours(value,count)};DateFnsUtils.prototype.setMinutes=function(value,count){return setMinutes(value,count)};DateFnsUtils.prototype.getSeconds=function(value){return getSeconds(value)};DateFnsUtils.prototype.setSeconds=
function(value,count){return setSeconds(value,count)};DateFnsUtils.prototype.isSameDay=function(value,comparing){return isSameDay(value,comparing)};DateFnsUtils.prototype.isSameMonth=function(value,comparing){return isSameMonth(value,comparing)};DateFnsUtils.prototype.isSameYear=function(value,comparing){return isSameYear(value,comparing)};DateFnsUtils.prototype.isSameHour=function(value,comparing){return isSameHour(value,comparing)};DateFnsUtils.prototype.startOfMonth=function(value){return startOfMonth(value)};
DateFnsUtils.prototype.endOfMonth=function(value){return endOfMonth(value)};DateFnsUtils.prototype.getYear=function(value){return getYear(value)};DateFnsUtils.prototype.setYear=function(value,count){return setYear(value,count)};DateFnsUtils.prototype.date=function(value){return"undefined"===typeof value?new Date:null===value?null:new Date(value)};DateFnsUtils.prototype.parse=function(value,formatString){return""===value?null:dateFnsParse(value,formatString,new Date,{locale:this.locale})};DateFnsUtils.prototype.format=
function(date,formatString){return format(date,formatString,{locale:this.locale})};DateFnsUtils.prototype.isEqual=function(date,comparing){return null===date&&null===comparing?!0:isEqual(date,comparing)};DateFnsUtils.prototype.isNull=function(date){return null===date};DateFnsUtils.prototype.isAfterDay=function(date,value){return isAfter(date,endOfDay(value))};DateFnsUtils.prototype.isBeforeDay=function(date,value){return isBefore(date,startOfDay(value))};DateFnsUtils.prototype.isBeforeYear=function(date,
value){return isBefore(date,startOfYear(value))};DateFnsUtils.prototype.isAfterYear=function(date,value){return isAfter(date,endOfYear(value))};DateFnsUtils.prototype.formatNumber=function(numberToFormat){return numberToFormat};DateFnsUtils.prototype.getMinutes=function(date){return date.getMinutes()};DateFnsUtils.prototype.getMonth=function(date){return date.getMonth()};DateFnsUtils.prototype.setMonth=function(date,count){return setMonth(date,count)};DateFnsUtils.prototype.getMeridiemText=function(ampm){return"am"===
ampm?"AM":"PM"};DateFnsUtils.prototype.getNextMonth=function(date){return addMonths(date,1)};DateFnsUtils.prototype.getPreviousMonth=function(date){return addMonths(date,-1)};DateFnsUtils.prototype.getMonthArray=function(date){for(date=[startOfYear(date)];12>date.length;)date.push(this.getNextMonth(date[date.length-1]));return date};DateFnsUtils.prototype.mergeDateAndTime=function(date,time){return this.setMinutes(this.setHours(date,this.getHours(time)),this.getMinutes(time))};DateFnsUtils.prototype.getWeekdays=
function(){var _this=this,now=new Date;return eachDayOfInterval({start:startOfWeek(now,{locale:this.locale}),end:endOfWeek(now,{locale:this.locale})}).map(function(day){return _this.format(day,"EEEEEE")})};DateFnsUtils.prototype.getWeekArray=function(date){var start=startOfWeek(startOfMonth(date),{locale:this.locale});date=endOfWeek(endOfMonth(date),{locale:this.locale});for(var count=0,nestedWeeks=[];isBefore(start,date);){var weekNumber=Math.floor(count/7);nestedWeeks[weekNumber]=nestedWeeks[weekNumber]||
[];nestedWeeks[weekNumber].push(start);start=addDays(start,1);count+=1}return nestedWeeks};DateFnsUtils.prototype.getYearRange=function(start,end){start=startOfYear(start);end=endOfYear(end);for(var years=[];isBefore(start,end);)years.push(start),start=addYears(start,1);return years};DateFnsUtils.prototype.getCalendarHeaderText=function(date){return this.format(date,this.yearMonthFormat)};DateFnsUtils.prototype.getYearText=function(date){return this.format(date,"yyyy")};DateFnsUtils.prototype.getDatePickerHeaderText=
function(date){return this.format(date,"EEE, MMM d")};DateFnsUtils.prototype.getDateTimePickerHeaderText=function(date){return this.format(date,"MMM d")};DateFnsUtils.prototype.getMonthText=function(date){return this.format(date,"MMMM")};DateFnsUtils.prototype.getDayText=function(date){return this.format(date,"d")};DateFnsUtils.prototype.getHourText=function(date,ampm){return this.format(date,ampm?"hh":"HH")};DateFnsUtils.prototype.getMinuteText=function(date){return this.format(date,"mm")};DateFnsUtils.prototype.getSecondText=
function(date){return this.format(date,"ss")};return DateFnsUtils}();module.exports=global}
//# sourceMappingURL=module$node_modules$$date_io$date_fns$build$index.js.map

{
"version":3,
"file":"module$node_modules$date_fns$roundToNearestMinutes$index.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,wDAAA,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYrHC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEE,QAASF,GAAX,CAAvC,CATrCG,MAAOC,CAAAA,cAAP,CAAsBN,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CO,MAAO,CAAA,CADoC,CAA7C,CAGAP,QAAQI,CAAAA,OAAR,CAuCAI,QAA8B,CAACC,SAAD,CAAYC,OAAZ,CAAqB,CACjD,GAAuB,CAAvB,CAAIC,SAAUC,CAAAA,MAAd,CACE,KAAM,KAAIC,SAAJ,CAAc,qDAAd,CAAN,CAGF,IAAIC,UAAYJ,OAAA,EAAW,WAAX,EAA0BA,QAA1B,CAAoC,GAAIK,OAAQX,CAAAA,OAAZ,EAAqBM,OAAQI,CAAAA,SAA7B,CAApC,CAA8E,CAE9F,IAAgB,CAAhB,CAAIA,SAAJ,EAAiC,EAAjC,CAAqBA,SAArB,CACE,KAAM,KAAIE,UAAJ,CAAe,8CAAf,CAAN;AAGF,IAAIC,KAAO,GAAIC,MAAOd,CAAAA,OAAX,EAAoBK,SAApB,CAAX,CACIU,QAAUF,IAAKG,CAAAA,UAAL,EADd,CAGIC,QAAUJ,IAAKK,CAAAA,UAAL,EAAVD,CAA8BF,OAA9BE,CAAwC,EACxCE,QAAAA,CAAiBC,IAAKC,CAAAA,KAAL,CAAWJ,OAAX,CAAqBP,SAArB,CAAjBS,CAAmDT,SAEnDY,UAAAA,EAAeF,IAAKG,CAAAA,KAAL,CADIN,OACJ,CADcP,SACd,CAA8BA,SAA9B,CACnB,OAAO,KAAIc,IAAJ,CAASX,IAAKY,CAAAA,WAAL,EAAT,CAA6BZ,IAAKa,CAAAA,QAAL,EAA7B,CAA8Cb,IAAKc,CAAAA,OAAL,EAA9C,CAA8Dd,IAAKe,CAAAA,QAAL,EAA9D,CAA+ET,OAA/E,CAAgGG,SAAhG,CAlB0C,CArCnD,KAAIR,OAASjB,sBAAA,CAAuBH,OAAA,CAAQ,2CAAR,CAAvB,CAAb,CAEIiB,QAAUd,sBAAA,CAAuBH,OAAA,CAAQ,mDAAR,CAAvB,CAwDdC,OAAOC,CAAAA,OAAP,CAAiBA,OAAQI,CAAAA,OAlE4F;",
"sources":["node_modules/date-fns/roundToNearestMinutes/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$date_fns$roundToNearestMinutes$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = roundToNearestMinutes;\n\nvar _index = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../_lib/toInteger/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name roundToNearestMinutes\n * @category Minute Helpers\n * @summary Rounds the given date to the nearest minute\n *\n * @description\n * Rounds the given date to the nearest minute (or number of minutes).\n * Rounds up when the given date is exactly between the nearest round minutes.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to round\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.nearestTo=1] - nearest number of minutes to round to. E.g. `15` to round to quarter hours.\n * @returns {Date} the new date rounded to the closest minute\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.nearestTo` must be between 1 and 30\n *\n * @example\n * // Round 10 July 2014 12:12:34 to nearest minute:\n * var result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34))\n * //=> Thu Jul 10 2014 12:13:00\n *\n * @example\n * // Round 10 July 2014 12:07:30 to nearest quarter hour:\n * var result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34), { nearestTo: 15 })\n * // rounds up because given date is exactly between 12:00:00 and 12:15:00\n * //=> Thu Jul 10 2014 12:15:00\n */\nfunction roundToNearestMinutes(dirtyDate, options) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only none provided present');\n  }\n\n  var nearestTo = options && 'nearestTo' in options ? (0, _index2.default)(options.nearestTo) : 1;\n\n  if (nearestTo < 1 || nearestTo > 30) {\n    throw new RangeError('`options.nearestTo` must be between 1 and 30');\n  }\n\n  var date = (0, _index.default)(dirtyDate);\n  var seconds = date.getSeconds(); // relevant if nearestTo is 1, which is the default case\n\n  var minutes = date.getMinutes() + seconds / 60;\n  var roundedMinutes = Math.floor(minutes / nearestTo) * nearestTo;\n  var remainderMinutes = minutes % nearestTo;\n  var addedMinutes = Math.round(remainderMinutes / nearestTo) * nearestTo;\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), roundedMinutes + addedMinutes);\n}\n\nmodule.exports = exports.default;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","roundToNearestMinutes","dirtyDate","options","arguments","length","TypeError","nearestTo","_index2","RangeError","date","_index","seconds","getSeconds","minutes","getMinutes","roundedMinutes","Math","floor","addedMinutes","round","Date","getFullYear","getMonth","getDate","getHours"]
}
